[{"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/index.js":"1","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/App.js":"2","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/theme/GlobalStyle.js":"3","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/vaults/index.js":"4","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/NavigationBar.js":"5","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/ConnectButton.js":"6","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/Page.js":"7","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/vaults/components/CreateVault.js":"8","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/TruncateAddress.js":"9","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/index.js":"10","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/nft.js":"11","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/abis.js":"12","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/uri.js":"13","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/addresses.js":"14","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/index.js":"15","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/index.js":"16","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/PoolCard.js":"17","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/Badges.js":"18","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/UnstakeModal.js":"19","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/DepositModal.js":"20","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/pools.js":"21","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/fetchUserData.js":"22","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/components/NFTFooter.js":"23","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/components/NFTCard.js":"24","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/components/NFTHeading.js":"25","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/useRefresh.js":"26","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/contexts/RefreshContext.js":"27","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/Footer.js":"28","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/vaults/components/HowToSection.js":"29","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/components/Chart.js":"30","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/components/VaultNFTCard.js":"31","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/components/VaultNFTFooter.js":"32"},{"size":764,"mtime":1637899744768,"results":"33","hashOfConfig":"34"},{"size":873,"mtime":1638063524874,"results":"35","hashOfConfig":"34"},{"size":681,"mtime":1638063381634,"results":"36","hashOfConfig":"34"},{"size":13092,"mtime":1638119462431,"results":"37","hashOfConfig":"34"},{"size":4210,"mtime":1637886690189,"results":"38","hashOfConfig":"34"},{"size":2076,"mtime":1637885839637,"results":"39","hashOfConfig":"34"},{"size":314,"mtime":1638063215562,"results":"40","hashOfConfig":"34"},{"size":8030,"mtime":1637528012735,"results":"41","hashOfConfig":"34"},{"size":566,"mtime":1636923178723,"results":"42","hashOfConfig":"34"},{"size":8040,"mtime":1638134044849,"results":"43","hashOfConfig":"34"},{"size":4518,"mtime":1637991013303,"results":"44","hashOfConfig":"34"},{"size":42555,"mtime":1637523317062,"results":"45","hashOfConfig":"34"},{"size":104,"mtime":1637025681763,"results":"46","hashOfConfig":"34"},{"size":1570,"mtime":1637643924772,"results":"47","hashOfConfig":"34"},{"size":3767,"mtime":1638131410191,"results":"48","hashOfConfig":"34"},{"size":5697,"mtime":1637993081313,"results":"49","hashOfConfig":"34"},{"size":16427,"mtime":1638033400944,"results":"50","hashOfConfig":"34"},{"size":480,"mtime":1637885275441,"results":"51","hashOfConfig":"34"},{"size":3596,"mtime":1637526028782,"results":"52","hashOfConfig":"34"},{"size":5955,"mtime":1638033539833,"results":"53","hashOfConfig":"34"},{"size":1503,"mtime":1637644596678,"results":"54","hashOfConfig":"34"},{"size":3710,"mtime":1637991204956,"results":"55","hashOfConfig":"34"},{"size":3439,"mtime":1637884938891,"results":"56","hashOfConfig":"34"},{"size":3099,"mtime":1637885327839,"results":"57","hashOfConfig":"34"},{"size":1106,"mtime":1637729578160,"results":"58","hashOfConfig":"34"},{"size":260,"mtime":1637899765263,"results":"59","hashOfConfig":"34"},{"size":911,"mtime":1637899469895,"results":"60","hashOfConfig":"34"},{"size":580,"mtime":1638119213046,"results":"61","hashOfConfig":"34"},{"size":4701,"mtime":1638120439515,"results":"62","hashOfConfig":"34"},{"size":820,"mtime":1638127794392,"results":"63","hashOfConfig":"34"},{"size":2921,"mtime":1638133624540,"results":"64","hashOfConfig":"34"},{"size":3101,"mtime":1638134204337,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"c6os7v",{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"69"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"69"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"69"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/index.js",["152"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {GlobalStyle} from \"./theme/GlobalStyle\";\nimport {RefreshContextProvider} from \"./contexts/RefreshContext\"\n\n//web3 shit\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport {useWeb3React} from \"@web3-react/core\";\n\nconst getLibrary = (provider, connector)  => {\n  return new ethers.providers.Web3Provider(provider);\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n    <GlobalStyle />\n    <RefreshContextProvider>\n    <App />\n    </RefreshContextProvider>\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["153","154"],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/App.js",["155","156","157","158","159"],"import React, {useEffect, useState} from \"react\";\nimport {styled} from \"styled-components\";\nimport GlobalStyle from \"./theme/GlobalStyle\";\nimport { BrowserRouter as Router, Link, Route, Routes } from 'react-router-dom';\n\n//pages\nimport Home from \"./pages/vaults\";\nimport Vaults from \"./pages/myvaults\";\nimport NFT from \"./pages/nftgallery\";\nimport Pools from \"./pages/pools\";\nimport {NavigationBar} from \"./components/NavigationBar\";\nimport {Footer} from \"./components/Footer\"\n\n\nfunction App() {\n  return (\n    <>\n    <Router>\n      <NavigationBar/>\n\n        <Routes>\n\n          <Route path='/' element={<Home/>} />\n     \n          <Route path='/vaults' element={<Vaults/>} />\n\n          <Route path=\"/pools\" element={<Pools/>} />\n\n          <Route path=\"/nfts\" element={<NFT/>} />\n\n        </Routes>\n      \n    </Router>\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/theme/GlobalStyle.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/vaults/index.js",["160","161","162","163","164","165","166"],"import React, {useState, useEffect}from 'react'\nimport styled, { keyframes } from \"styled-components\"\nimport NavigationBar from \"../../components/NavigationBar\"\nimport {Page} from \"../../components/Page\"\nimport {Vault} from \"./components/CreateVault\"\nimport {BsArrowUpRight} from \"react-icons/bs\"\nimport {GiToken} from \"react-icons/gi\"\nimport {Card, Container, Button, Dropdown, Form} from \"react-bootstrap\"\nimport {HowToSection} from \"./components/HowToSection\"\n\nconst HeaderGridContainer = styled(Container)`\n    margin-top: 66px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n        gap: 50px;\n    }\n`\nconst HeaderContentContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n    height: auto;\n    width: 100%;\n`\n\nexport const BigHeading = styled.h1`\n    font-size: clamp(1rem, 4rem, 4rem);\n    font-weight: 800;\n    color:  #fbdb37;\n    margin-bottom: 24px;\n    @media (max-width: 768px) {\n        font-size: clamp(1rem, 2.1rem, 3rem);\n    }\n    \n`\nexport const LittleHeading = styled.h2`\n    font-size: 130%;\n    font-weight: 600;\n    color: #fbfbfb;\n    @media (max-width: 768px) {\n        font-size: 1.0rem;\n    }\n    \n`\nconst HeaderImage = styled.object`\n    height: 500%;\n    width: 100%;\n    align-self: start;\n    @media (max-width: 768px) {\n        height: 250px;\n    }\n`\n\nconst BackgroundImage = styled.div`\n    aspect-ratio: 960/300;\n    width: 100%;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n    background-image: url('/assets/images/homebackground.svg')\n`\n\nconst HeaderButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n    align-self: start;\n    margin-right: 15px;\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\nexport const HeaderButtonSecondary = styled(Button)`\n    border-radius: 15px;\n    height: auto;\n    width: auto;\n    background: none;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n    align-self: start;\n    margin-right: 15px;\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\nconst StupidSpan = styled.span`\n    align-self: start;\n`\nconst BodyGridContainer = styled(Container)`\n\n    margin-top: 100px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: end;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n    }\n`\nexport const BodyContentContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    justify-content: center;\n    align-content: center;\n    margin-bottom: 35px;\n`\nexport const BodyBigHeading = styled(BigHeading)`\n    font-weight: 600;\n    font-size 190%;\n    color: #fbdb37;\n`\nexport const BodyLittleHeading = styled(LittleHeading)`\n    font-weight: 400;\n    font-size: 120%;\n    color: #fbfbfb;\n`\nexport const BodyContentCard = styled(Card)`\n    align-self: center;\n    height: auto;\n    padding: 19px;\n    width: 90%;\n    background-color: #1D1E20;\n    background-radius: 8px;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nexport const BodyContentCardContainer = styled(Container)`\n    width: 100%\n    height: auto;\n    padding: 8px;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    align-self: center;\n`\nconst BodyImageContainer = styled(Container)`\n    align-self: center;\n    width: auto;\n    height: 80%;\n`\n\nconst SubHeaderGridContainer = styled(BodyGridContainer)`\n    margin-top: 100px;\n    grid-template-columns: auto auto auto;\n`\nconst SubHeaderContentContainer = styled(Container)`\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    align-items: space-around;\n    justify-content: center;\n    align-content: center;\n    border-left: 2px solid #cdcfd2;\n    border-right: 2px solid #cdcfd2;\n`\nexport const BuyButtonSecondary = styled(HeaderButtonSecondary)`\n    align-self: center;\n`\nconst TokenSubHeaderGridContainer = styled(SubHeaderGridContainer)`\n    margin-top: 100px;\n    grid-template-columns: auto;\n\n`\nconst TokenSubHeaderContentContainer = styled(Container)`\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    align-items: space-around;\n    justify-content: center;\n    align-content: center;\n\n`\nconst FooterImage = styled.img`\n    width: 60%;\n    height: auto;\n    \n    @media (min-width: 1200px) {\n        margin-bottom: 100px;\n    }\n    \n`\nconst rotateTwo = keyframes`\n    from {\n        transform: rotate(0deg) translate(0, 0) translate(0, 0);\n    }\n    to {\n        transform: rotate(360deg) translate(7%, 15%) translate(-7%, -15%);\n    }\n    \n`\nconst rotateThree = keyframes`\n    0% {\n        transform: translateX(0px) translateY(0px);\n    }\n    50% {\n        transform: translateX(-22px) translateY(-22px);\n    }\n    100% {\n        transform: translateX(0px) translateY(0px);\n    }\n    \n`\nconst FooterImageTwo = styled.img`\n    width: 20%;\n    height: auto;\n    animation: ${rotateTwo} infinite 10s linear;\n    @media (min-width: 1200px) {\n        margin-bottom: 100px;\n    }\n    \n`\nconst FooterImageThree = styled.img`\n    width: 20%;\n    height: auto;\n    animation: ${rotateThree} infinite 9s ease-in-out;\n    transform: rotate(180deg);\n    @media (min-width: 1200px) {\n        margin-bottom: 100px;\n    }\n\n    \n`\nexport const Home = () => {\n \n    return (\n        <>\n        <Page>\n            <HeaderGridContainer>\n                <HeaderContentContainer>\n                    <BigHeading>Beef-up with a Corn-fed portfolio</BigHeading>\n                    <LittleHeading>Buy and Sell Algo-NFTs that can automate your on-chain trading strategies</LittleHeading>\n                    <StupidSpan>\n                    <HeaderButton>Mint Now</HeaderButton>\n                    <HeaderButtonSecondary>Learn</HeaderButtonSecondary>\n                    </StupidSpan>\n                </HeaderContentContainer>\n                <HeaderContentContainer style={{alignSelf: \"center\"}}>\n                    <HeaderImage type=\"image/svg+xml\" data=\"/assets/images/MovingCircles.svg\">svg-animation</HeaderImage>\n                </HeaderContentContainer>\n            </HeaderGridContainer>\n            \n            \n            <SubHeaderGridContainer style={{marginTop: \"180px\", marginBottom: \"140px\"}}>\n                <SubHeaderContentContainer>\n              \n                    <h2 style={{color: \"#fbdb37\", fontWeight: \"600\"}}>COB Token</h2>\n                    <BuyButtonSecondary>\n                        Buy <BsArrowUpRight />\n                    </BuyButtonSecondary>\n                </SubHeaderContentContainer>\n                <SubHeaderContentContainer>\n                    <h2 style={{color: \"#fbdb37\", fontWeight: \"600\"}}>Market Cap</h2>\n                    <h2>100,344,104</h2>\n                </SubHeaderContentContainer>\n                <SubHeaderContentContainer>\n                    <h2 style={{color: \"#fbdb37\", fontWeight: \"600\"}}>Emissions Rate</h2>\n                    <h2>0.4/block</h2>\n                </SubHeaderContentContainer>\n            </SubHeaderGridContainer>\n\n            <BodyGridContainer style={{marginBottom: \"85px\"}}>\n                <BodyContentContainer>\n                    <BodyContentCard>\n                        <BodyContentCardContainer>\n                            <BodyBigHeading>Accumulator Distributor</BodyBigHeading>\n                            <hr></hr>\n                            <BodyLittleHeading>\n                                Our smart contract is built on the principals of institutional algorithmic investing. Accumulate tokens at low prices and Distribute them at higher prices.\n                            </BodyLittleHeading>\n                            <BodyLittleHeading style={{color: \"#fbdb37\", fontWeight: \"600\"}}>\n                                Easy right? \n                            </BodyLittleHeading>\n                        </BodyContentCardContainer>\n                    </BodyContentCard>\n                </BodyContentContainer>\n                <BodyContentContainer>\n                    <BodyBigHeading style={{color: \"#fbdb37\", fontWeight: \"800\", fontSize: \"270%\"}}>We're bringing Advanced Orders to DeFi</BodyBigHeading>\n                </BodyContentContainer>\n            </BodyGridContainer>\n\n            \n                <BodyContentContainer>\n                    <HowToSection>\n\n                    </HowToSection>\n                </BodyContentContainer>\n        \n\n            <BodyGridContainer>\n                <BodyContentContainer>\n                    <BodyImageContainer>\n                    <FooterImageTwo style={{width: \"100%\"}} src={`/assets/images/Sircle.svg`}></FooterImageTwo>\n                    </BodyImageContainer>\n                </BodyContentContainer>\n\n                <BodyContentContainer>\n                    <BodyBigHeading style={{fontSize: \"310%\"}}>Smart Aggregation and Routing</BodyBigHeading>\n                    <BodyLittleHeading>We route orders through multiple DEX's to ensure ample liquidity and reduce slippage.</BodyLittleHeading>\n                </BodyContentContainer>\n            </BodyGridContainer>\n\n            <BodyGridContainer>\n\n                <BodyContentContainer>\n                    <BodyLittleHeading style={{color: \"#fbfbfb\", fontWeight: \"400\", fontSize: \"180%\", textAlign: \"center\"}}>\n                        Many AMMs lack stop-losses and other conditional order-types. We aim to fix that.</BodyLittleHeading>\n                </BodyContentContainer>\n                <BodyContentContainer>\n                    <BodyContentCard>\n                        <BodyContentCardContainer>\n                            <BodyBigHeading>Dozens of Strategies</BodyBigHeading>\n                            <hr></hr>\n                            <BodyLittleHeading>\n                                Everything from stop losses to advanced bracket orders based on technical analytics of price.\n                            </BodyLittleHeading>\n                        </BodyContentCardContainer>\n                    </BodyContentCard>\n                </BodyContentContainer>\n            </BodyGridContainer>\n\n            <TokenSubHeaderGridContainer>\n                <TokenSubHeaderContentContainer style={{alignSelf: \"center\"}}>\n                    <GiToken style={{alignSelf: \"center\", color: \"#fbdb37\", fontSize: \"500%\", marginBottom: \"30px\"}}/>\n                    <h2 style={{color: \"#fbdb37\", fontWeight: \"600\", fontSize: \"240%\", marginBottom: \"50px\"}}>100% Fair Launch Governance Token</h2>\n                    <BodyContentCard>\n                        <BodyContentCardContainer>\n                    <p>Stake liquidity to earn COB token.  No pre-sale, no whitelist, one-hundred percent community driven staking.</p>\n                    <hr></hr>\n \n                    <p>COB will be used as a governance tool to vote on new strategies and proposals for the protocol. The fair launch mechanism ensures that no group controls the protocol from the start.</p>\n                    </BodyContentCardContainer>\n                    </BodyContentCard>\n                    <BuyButtonSecondary>Stake <BsArrowUpRight/></BuyButtonSecondary>\n\n\n                </TokenSubHeaderContentContainer>\n            </TokenSubHeaderGridContainer>\n\n\n        <Container style={{height: \"460px\", width: \"100%\", display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", marginTop: \"100px\", marginBottom: \"20px\"}}>\n\n      \n        <FooterImage src={'/assets/images/Docs.svg'}></FooterImage> \n   \n        <FooterImageTwo style={{alignSelf: \"flex-start\"}} src={'/assets/images/Sircle.svg'}></FooterImageTwo>\n        <FooterImageThree src={'/assets/images/Sircle.svg'}></FooterImageThree>\n        \n        \n\n        </Container>\n        </Page>\n        </>\n    )\n}\n\nexport default Home\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/NavigationBar.js",["167"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport {Link} from 'react-router-dom';\n\nimport {ConnectButton} from \"./ConnectButton\"\n\n//bootstrap components\nimport {Container, Navbar, NavItem} from \"react-bootstrap\";\n\n\nconst NavContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    height: auto;\n    \n    \n`\n\nconst Nav = styled(Navbar)`\n    \n    height: auto;\n    width: auto;\n    padding: 5px;\n    padding-top: 8px;\n    max-width: auto;\n    background-color: transparent !important;\n    \n    \n`\n\nconst ImageWrapper = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 2px;\n    margin-left: 1px;\n    height: auto;\n    width: auto;\n    @media (max-width: 768px) {\n        display: none;\n      }\n    \n`\nconst LogoText = styled.p`\n    font-weight: 600;\n    font-size: 25px;\n    @media (max-width: 768px) {\n        display: none;\n      }\n\n`\n\nconst NavBrandImageWrapper = styled.img`\n    height: 100px;\n    width: auto;\n`\n\nconst LinkContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-left: 15px;\n    width: auto;\n    height: 50px;\n    padding: 2px;\n    margin-right: 30px;\n    border-radius: 20px;\n    background-color: #1D1E20;\n    justify-content: space-evenly;\n    align-items: center;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n\n\n\n    \n`\n\nconst NavbarLink = styled.a`\n    height: auto;\n    margin-left: 5px;\n    margin-right: 5px;\n    font-weight: 400;\n    font-size: 1.3em;\n    padding-left: 8px;\n    padding-right: 8px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    color: white;\n    border-radius: 40px;\n    text-decoration: none;\n\n    @media (max-width: 768px) {\n        font-size: 0.9em;\n        margin-left: 3px;\n        margin-right: 3px;\n      }\n\n    &:hover {\n        padding-left: 8px;\n        padding-right: 8px;\n        padding-top: 4px;\n        padding-bottom: 4px;\n        background: #393C3F;\n        border-radius: 20px;\n        color: white;\n    }\n\n`\nconst CleanLink = styled(Link)`\n    text-decoration: none;\n`\n\nconst NetworkContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: auto;\n    height: 45px;\n    padding: 2px;\n    margin-right: 30px;\n    border-radius: 8px;\n    background-color: #1D1E20;\n    justify-content: space-evenly;\n    align-items: center;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    @media (max-width: 768px) {\n        display: none;\n      }\n`\n\nconst NetworkImage = styled.img`\n    height: 30px;\n    width: auto;\n`\nconst NetworkText = styled.div`\n    font-size: 14px;\n    font-weight: 600;\n    align-self: center;\n    margin-right: 4px\n`\n\n\n\n\nexport const NavigationBar = () => {\n    return (\n        <>\n            <Nav>\n                <NavContainer>\n                        <ImageWrapper>\n                            <NavBrandImageWrapper src={`/assets/images/CornLogo.png`}></NavBrandImageWrapper>\n                            <LogoText>Corn Finance</LogoText>\n                        </ImageWrapper>\n                        <LinkContainer>\n                            <CleanLink to=\"/\">\n                                <NavbarLink href=\"#\">Home</NavbarLink>\n                            </CleanLink>\n                            <CleanLink to=\"/vaults\">\n                                <NavbarLink href=\"#\">Vaults</NavbarLink>\n                            </CleanLink>\n                            <CleanLink to=\"/pools\">\n                                <NavbarLink href=\"#\">Pools</NavbarLink>\n                            </CleanLink>\n                            <CleanLink to=\"/nfts\">\n                                <NavbarLink href=\"#\">NFTs</NavbarLink>\n                            </CleanLink>\n                        </LinkContainer>\n                        <NetworkContainer>\n                            <NetworkImage src={`/assets/images/CornLogo.png`}></NetworkImage>\n                            <NetworkText>Polygon</NetworkText>\n                        </NetworkContainer>\n                        <ConnectButton></ConnectButton>\n                </NavContainer>\n                \n            </Nav>\n\n        </>\n    )\n}\n\nexport default NavigationBar\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/ConnectButton.js",["168","169","170","171","172","173"],"import React, {useEffect, useState} from 'react'\nimport styled from \"styled-components\"\nimport {Button} from \"react-bootstrap\";\nimport {TruncateAddress} from \"../utils/TruncateAddress\"\n\n//web3 shit\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\nimport { ethers, getSigner } from \"ethers\";\nimport {useWeb3React} from \"@web3-react/core\";\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: [1, 137],\n})\n\n\nconst TheButton = styled(Button)`\n \n\n    border-radius: 15px;\n    height: auto;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 1.3em;\n    font-weight: 800;\n\n    @media (max-width: 768px) {\n       font-size: 1em;\n      }\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-weight: 800;\n    }\n    \n`\n\nexport const ConnectButton = () => {\n    const { active, account, library, connector, provider, activate, deactivate } = useWeb3React();\n    const shortie = TruncateAddress(account);\n\n    useEffect(() => {\n        const eagerConnect = async (connector) => {\n            try {\n                activate(injected);\n            } catch (err) {console.log(err)}\n        }\n        eagerConnect(injected);\n        \n    }, [])\n\n    const handleConnect = async (connector) => {\n        try {\n            await activate(connector);\n        } catch (err) {console.log(err)}\n    }\n\n    const handleDisconnect = async () => {\n        try {\n            deactivate(injected);\n        } catch (err) {console.log(err)}\n    }\n    return (\n        <>\n        \n\n        { !active ? \n        <TheButton onClick={() => handleConnect(injected)} >Connect</TheButton>\n        :\n        <TheButton library={library} onClick={() => handleDisconnect()} >{shortie}</TheButton>\n\n        }\n        </>\n    )\n}\n\nexport default ConnectButton\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/Page.js",["174"],"import React from 'react'\nimport Container from \"react-bootstrap/Container\";\nimport styled from \"styled-components\"\n\nexport const Page = styled(Container)`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 100vw;\n  padding-left: 16px;\n  padding-right: 16px;\n  flex-direction: column;\n  \n\n`\n\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/vaults/components/CreateVault.js",["175","176","177","178","179","180","181"],"import React, {useState, useEffect}from 'react'\nimport styled from \"styled-components\"\nimport NavigationBar from \"../../../components/NavigationBar\"\n\nimport {Card, Container, Button, Dropdown, Form} from \"react-bootstrap\"\n\n//icon\nimport { BsGearFill } from \"react-icons/bs\";\nimport {FaEthereum, FaBitcoin} from \"react-icons/fa\"\nimport {BiDollarCircle} from \"react-icons/bi\"\n\nconst VaultSectionWrapper = styled(Container)`\n    margin-top: 50px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n`\n\nconst VaultCard = styled(Card)`\n    padding: 5px;\n    border-radius: 12px;\n    height: auto;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n\n\n`\nconst CardHeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    padding-top: 5px;\n    margin: 8px;\n    margin-bottom: 25px;\n    align-items: center;\n    height: auto;\n    width: auto;\n    justify-content: space-between;\n`\nconst CardHeading = styled.h2`\n    font-size: 26px;\n    font-weight: 600;\n`\n\n\nconst SettingsButton = styled(Button)`\n    \n    background-color: transparent !important;\n    border: none;\n\n    &:hover {\n        background-color: transparent !important;\n        border: none;\n    }\n\n    &:focus {\n        background-color: transparent !important;\n        border: none;\n    }\n\n`\n\nconst CardBodyContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 5px;\n    width: 100%;\n    height: auto;\n    justify-content: center;\n    align-items: center;\n`\n\nconst TokenInput = styled.input`\n  \n    width: 96%;\n    height: 100px !important;\n    border: none;\n    background: #292C2D;\n    color: white;\n    border-radius: 20px;\n    border-width: 1px !important;\n    border-color: #4e5456 !important;\n    padding: 15px;\n    font-size: 45px;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    text-align: start;\n    direction: rtl;\n\n`\n\nconst GearIcon = styled(BsGearFill)`\n    &:hover {\n        height: 22px;\n        width: auto;\n    }\n`\nexport const EthIcon = styled(FaEthereum)`\n`\nexport const BitcoinIcon = styled(FaBitcoin)`\n`\nexport const DollarIcon = styled(BiDollarCircle)`\n`\n\nconst CardFooterRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    width: auto;\n`\n\nconst DropDownSectionContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    width: 100%;\n    justify-content: space-around;\n`\n\nconst VaultForm = styled.form`\n`\n\nconst DropDownButton = styled.select`\n    border-radius: 15px;\n    background: #292C2D;\n    height: 88px;\n    width: auto;\n    font-weight: 600;\n    font-size: 20px;\n    border-color: #4e5456;\n    color: #fbfbfb;\n    margin-top: 10px;\n    text-align-last:center; \n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    &:hover {\n     \n        background: #4e5456;\n        border-color: #a6acae;\n    }\n\n    &:focus {\n        background-color: !important #4e5456;\n        border-color: !important #a6acae;\n    }\n\n    &:active {\n        background-color: !important #4e5456;\n        border-color: !important #a6acae;\n    }\n`\n\nconst InfoBox = styled(Card)`\n    height: auto;\n    width: auto;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    background: #292C2D;\n    font-size: 14px;\n    padding: 10px;\n    margin-top: 10px;\n    border-radius: 20px;\n    border-width: 1px;\n    border-color: #4e5456;\n\n`\n\nconst CardButtonRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    width: auto;\n    align-items: center;\n    justify-content: center;\n`\n\nconst SubmitButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: 96%;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 15px;\n    margin-bottom: 15px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:disabled {\n        background: transparent;\n        border-color: #ffc67a;\n        border-width: 3px;\n        color: #ffc67a;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\n\n\n\nexport const Vault = () => {\n    const [amount, setAmount] = useState('')\n    const [token, setToken] = useState('')\n    const [strategy, setStrategy] = useState('')\n    console.log(`\n        Amount: ${amount}\n        Token: ${token}\n        Strategy: ${strategy}\n    `)\n    let button;\n    if (amount == '' && token == '' && strategy == '') {\n        button = <SubmitButton disabled size=\"lg\">Enter Vault Info</SubmitButton>;\n      } else if (amount !== '' && token !== '' && strategy !== ''){\n        button = <SubmitButton size=\"lg\">Create Vault</SubmitButton>;\n      } else {\n        button = <SubmitButton disabled size=\"lg\">Enter Vault Info</SubmitButton>;\n      }\n    return (\n        <>\n            <VaultSectionWrapper>\n            \n                <VaultCard>\n                <VaultForm>\n\n                    <CardHeadingContainer>\n                        <CardHeading>Create a Vault</CardHeading>\n                        <SettingsButton src={\"#\"}><GearIcon /></SettingsButton>\n                    </CardHeadingContainer>\n\n\n                    <CardBodyContainer>\n                    <TokenInput\n                        placeholder = \"0.00\"\n                        value={amount}\n                        onChange = {(e) => setAmount(e.target.value)}\n                    >\n\n                    </TokenInput>\n                    </CardBodyContainer>\n\n                    <CardFooterRow>\n                        <DropDownSectionContainer>\n                                <DropDownButton\n                                    value = {token}\n                                    onChange = {(e) => setToken(e.target.value)}\n                                >\n                                    <option value=\"\" disabled selected>Token</option>\n                                    <option value=\"USDC\">USDC</option>\n                                    <option value=\"ETH\">ETH</option>\n                                    <option value=\"BTC\">BTC</option>\n                                    <option value=\"MATIC\">MATIC</option>\n                                </DropDownButton>\n                \n                                <DropDownButton\n                                    value = {strategy}\n                                    onChange = {(e) => setStrategy(e.target.value)}\n                                >\n                                    <option value=\"\" disabled selected>Strategy</option>\n                                    <option value=\"SMACROSSOVER\">SMA Crossover</option>\n                                    <option value=\"MACD\">MACD Standard</option>\n                                    <option value=\"RSI\">RSI Standard</option>\n                                    <option value=\"SMALLBRACKET\">3% Bracket</option>\n                                    <option value=\"LARGEBRACKET\">5% Bracket</option>\n\n                                </DropDownButton>\n\n                        </DropDownSectionContainer>\n\n                        <DropDownSectionContainer>\n                            <InfoBox>\n                                <h3>Select a Strategy</h3>\n                                <p>you must select a strategy on the right.  Then select the token you wish to trade and it's amount.</p>\n                            </InfoBox>\n                        </DropDownSectionContainer>\n                    </CardFooterRow>\n\n                    <CardButtonRow>\n                        {button}\n                    </CardButtonRow>\n\n                </VaultForm>\n                </VaultCard>\n\n            </VaultSectionWrapper>\n        </>\n    )\n}\n\nexport default Vault","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/TruncateAddress.js",["182","183","184","185","186"],"import { ethers } from \"ethers\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: [1, 137],\n})\n\nexport const TruncateAddress = () => {\n    const { active, account, library, connector, activate, deactivate } = useWeb3React();\n\n    let shortAddress = \"\"\n    if (active) {\n        shortAddress = account.substring(0,7);\n    } else {\n        shortAddress = \"Connect\"\n    }\n    return shortAddress    \n}\n\nexport default TruncateAddress","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/index.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/nft.js",["206","207","208","209","210","211","212","213","214","215"],"import {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../config/addresses\";\nimport {nftABI} from \"../config/abis\";\nimport {nftURI} from \"../config/uri\";\nimport axios from \"axios\"\n\n//ABIs\nimport {ERC20Abi} from \"../config/abis\"\n\n\nexport const writeContract = async (active, _signer, _account, _address, _abi) => {\n    if (active) {\n        try {\n            const ctr = new ethers.Contract(_address, _abi, _signer)\n            if (ctr.address) {\n                return ctr\n            } else {\n                console.log(\"Contract failed to load, refresh signer\")\n            }\n        } catch (err) {console.log(err)}\n    }\n}\n\n\n\nexport const userMint = async (_nftContract, recipient, _tokenURI) => {\n    const ctr = _nftContract;\n    try {\n        const mint = await ctr.mintNFT(recipient, _tokenURI)\n        return mint\n    } catch (err) {console.log(err)}\n}\n\n\nconst getNFTData = async () => {\n    const data = axios.get(nftURI)\n    .then(value => {\n        return value\n    })\n}\n\n\n//staking stuff\nexport const fetchPoolAllowance = async (pools, _signer, account, masterchef) => {\n\n    const calls = pools.map( async (pool) => {\n        const token = pool.tokenStakeAddress;\n        const ctr = new ethers.Contract(token, ERC20Abi, _signer)\n        const allowance = await ctr.allowance(account, masterchef.address)\n        const formattedAllowance = ethers.utils.formatUnits(allowance, \"ether\");\n\n        if (formattedAllowance !== \"0.0\") {\n            return {approved: true}\n        } else {\n            return {approved: false}\n        }\n    })\n\n    const callResults = await Promise.all(calls)\n    console.log(`These are your call results from allowance ${callResults}`)\n    console.log(callResults)\n    return callResults\n\n}\n\nexport const fetchTokenStakeBalance = async (pools, _signer, account) => {\n\ntry {    const calls = pools.map( async (pool) => {\n        const token = pool.tokenStakeAddress;\n        const call = await getTokenStakeBalance(token, _signer, account)\n        const formattedCall = ethers.utils.formatUnits(call, \"ether\")\n        const cleancall = stringToFixed(formattedCall, 3)\n        return cleancall\n    })\n\n    const callResults = await Promise.all(calls)\n    console.log(callResults)\n    return callResults\n    } catch (err) {console.log(err)}\n\n}\n\nexport const setPoolAllowance = async (tokenAddress, masterchef, _signer) => {\n    const ctr = new ethers.Contract(tokenAddress, ERC20Abi, _signer)\n    try {\n        const approve = await ctr.approve(masterchef.address, ethers.constants.MaxUint256) \n        return approve\n    } catch (err) {console.log(err)}\n}\n\n\nexport const getTokenStakeBalance = async (tokenAddress, _signer, account) => {\n    const ctr = new ethers.Contract(tokenAddress, ERC20Abi, _signer)\n    try {\n        const balance = await ctr.balanceOf(account)\n        return balance\n    } catch (err) {console.log(err)}\n}\n\n// const balances = poolData.map( async (value, index) => {\n//     const address = value.tokenStakeAddress\n//     const erc20 =  await writeContract(_active, signer, account, address, abi)\n//     const masterChefAddress = \"0xC71EbC899BCC111F39B2715B5d2D397E671B5bd2\"\n//     const balance =  await erc20.balanceOf(masterChefAddress)\n//     const stringbal = ethers.utils.formatUnits(balance, \"ether\")\n//     return stringbal\n// });\n\n// const results = await Promise.all(balances)\n// return results\n\n\nexport const userStake = async (_masterchef, pid, amount) => {\n    const ctr = _masterchef;\n    try {\n        const strAmount = amount.toString();\n        const strPid = pid.toString();\n\n        await ctr.deposit(strPid, strAmount);\n    } catch (err) {console.log(err)}\n\n}\n\nexport const userClaim = async (_masterchef, pid) => {\n    const ctr = _masterchef;\n    const amount = 0;\n    try {\n        const strAmount = amount.toString();\n        const strPid = pid.toString();\n\n        await ctr.deposit(strPid, strAmount)\n    } catch (err) {console.log(err)}\n}\n\nexport const toFixed = (num, fixed) => {\n    try {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    } catch (err) {\n      console.log(err)\n      return \"0\"\n    }\n\n  }\n\n  export const stringToFixed = (num, fixed) => {\n    try {\n      var re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n      return num.toString().match(re)[0];\n    } catch (err) {\n      console.log(err)\n      return \"0\"\n    }\n\n  }","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/abis.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/uri.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/addresses.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/index.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/index.js",["234","235","236","237","238","239","240","241","242","243","244","245","246"],"\nimport styled from \"styled-components\";\nimport axios from \"axios\"\nimport {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n//static confg\nimport { addresses } from \"../../config/addresses\";\nimport {pools} from \"../../config/pools\";\nimport {MasterChefABI, ERC20Abi} from \"../../config/abis\";\nimport {writeContract, fetchPoolAllowance, getTokenStakeBalance, fetchTokenStakeBalance} from \"../../utils/nft\";\nimport {fetchUserPoolData, mapPendingToOriginalData, getPoolBalance} from \"../../utils/fetchUserData\";\n//Components\nimport {Page} from \"../../components/Page\"\nimport {Container, Card, Button} from \"react-bootstrap\";\nimport PoolCard from \"./components/PoolCard\";\n\n//hooks\nimport {useRefresh} from \"../../utils/useRefresh\";\n\n\n\n\nconst PoolGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`\n\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`\n\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`\n\n\nconst Pools = () => {\n   \n    const {active, account, library, connector} = useWeb3React();\n    const [poolData, setPoolData] = useState(pools); //imported above\n    const [masterChefContract, setMasterChefContract] = useState()\n    const [poolBalance, setPoolBalance] = useState('0')\n    const { fastRefresh } = useRefresh()\n    const [allowances, setAllowances] = useState('false')\n    const [balances, setBalances] = useState('0')\n    \n    \n    useEffect( () => {\n        if (active) {\n          const master = writeContract(\n              active, \n              library.getSigner(), \n              account,\n              addresses.masterChef,\n              MasterChefABI,\n              ).then(val => {\n                setMasterChefContract(val)\n                console.log(val)\n              })\n        } else {\n            console.log(\"no masterchef\")\n          const noData = setMasterChefContract(null)\n        }\n        \n        \n      }, [active])\n\n    useEffect( async () => {\n     \n            \n            if (library && account) {\n            \n                const farmData = await fetchUserPoolData(masterChefContract, library, account, 4)\n                const userFarmData = await mapPendingToOriginalData(farmData, pools, masterChefContract, 4)\n                const alounces = await fetchPoolAllowance(userFarmData, library.getSigner(), account, masterChefContract)\n                const bal = await fetchTokenStakeBalance(userFarmData, library.getSigner(), account)\n                setBalances(bal)\n                setPoolData(userFarmData)\n                setAllowances(alounces)\n            } else {\n                console.log(\"stillbroke no pooldata\")\n                setPoolData(pools)\n                setAllowances(\"false\")\n                setBalances('0')\n            }\n    \n              \n       }, [masterChefContract, fastRefresh])\n\n    useEffect( async () => {\n\n        try {\n            console.log(`This is poolData inside function ${poolData}`)\n            console.log(poolData)\n            const poolbl = await getPoolBalance(poolData, active, library.getSigner(), account, ERC20Abi, masterChefContract, 4)\n            //const poolbal = ethers.utils.formatUnits(poolbl, \"ether\")\n            setPoolBalance(poolbl)\n            console.log(\"poolbally\")\n            console.log(poolbl)          \n    \n\n        } catch (err) {\n            console.log(err)\n        }\n    }, [poolData, active, library])\n\n    //if we do have pooldata then go ahead and populate a card for each pool\n    if (masterChefContract !== null && active && balances != undefined) {\n            const mapPoolData =  poolData.map((pool, index) => (\n\n                <PoolCard balance={balances[index]} allowance={allowances[index]} masterChef={masterChefContract} signer={library.getSigner()} pid={index} poolBalance={poolBalance[index]} pool={pool}/>\n                ));\n      \n\n\n\n        return (\n            <>\n            <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Staking Pools</BigHeading>\n                    <LittleHeading>Stake Assets to Earn COB</LittleHeading>\n                </HeadingBackground>\n            </HeadingContainer>\n            <PoolGrid>\n                {mapPoolData}\n            </PoolGrid>\n            \n            \n    \n            </>\n        )\n    }\n   \n    //if we dont have pool data then return static dummy\n    return (\n        <>\n        <Page>\n\n            <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Staking Pools</BigHeading>\n                    <LittleHeading>Stake Assets to Earn COB</LittleHeading>\n                </HeadingBackground>\n            </HeadingContainer>\n\n            <PoolGrid>\n\n                <PoolCard/>\n                <PoolCard/>\n                <PoolCard/>\n                \n            \n            </PoolGrid>\n            \n\n        </Page>\n\n        </>\n    )\n}\n\nexport default Pools","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/PoolCard.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import styled from \"styled-components\";\nimport {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { Link } from 'react-router-dom'\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from \"axios\"\nimport { StringToFixedDecimal, userClaim, fetchPoolAllowance, setPoolAllowance, toFixed, getTokenStakeBalance} from \"../../../utils/nft\"\n\n//components\nimport {Container, Card, Button, Image} from \"react-bootstrap\";\nimport {HeaderButtonSecondary} from \"../../vaults/index\"\nimport {MultiplierBadge} from \"./Badges\"\nimport DepositModal from \"./DepositModal\"\nimport UnstakeModal from \"./UnstakeModal\"\n\n\n//icons\nimport {BsArrowUpRightSquare, BsCalculatorFill} from \"react-icons/bs\"\nimport {GoVerified} from \"react-icons/go\"\nimport {FaCircle, FaRegCircle, FaRegCheckCircle} from \"react-icons/fa\"\nimport {BiCoinStack} from \"react-icons/bi\"\nimport {RiCoinLine} from \"react-icons/ri\"\nimport {HiChevronDoubleUp, HiChevronDoubleDown} from \"react-icons/hi\"\n\n\nconst ActualPoolCard = styled.div`\n    background: #1D1E20;\n    box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n    border-radius: 32px;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n`\nconst Divider = styled.div`\n  background-color: #fbfbfb;\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\nconst StyledCardContent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: 0;\n`\nconst CardTitle = styled.div`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\nconst ClaimButton = styled(HeaderButtonSecondary)`\n`\n\nconst ApproveButton = styled(HeaderButtonSecondary)`\n`\n\nconst StakeButton = styled(HeaderButtonSecondary)`\n`\n\nconst UnstakeButton = styled(HeaderButtonSecondary)`\n`\n\nconst StyledButton = styled.button`\n  align-items: center;\n  background: #fbdb37;\n  border: 0;\n  border-radius: 12px;\n  color: #32cad7;\n  cursor: pointer;\n  display: flex;\n  font-size: 100%;\n  font-weight: 700;\n  height: auto;\n  justify-content: center;\n  outline: none;\n  padding-left: 5px;\n  padding-right: 5px;\n  width: 100%;\n  border: 2px solid #33cbd7;\n  font-size: 14px;\n  padding: 4px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 2px;\n  padding: 0 4px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 4px;\n  padding: 0 4px;\n  text-decoration: none;\n`\n\n//footer expandable\n\nconst StyledFooter = styled.div`\n  border-top: 1px solid grey;\n  padding: 24px;\n`\n\nexport const StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: #fbdb37;\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst PoolFinishedSash = styled.div`\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: auto;\n  width: 100%;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 120%;\n  font-weight: 600;\n  color: #fbfbfb;\n`\nconst CardFooter = ({\n    projectLink,\n    totalStaked,\n    blocksRemaining,\n    isFinished,\n    blocksUntilStart,\n    poolCategory,\n  }) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const Icon = isOpen ? HiChevronDoubleUp : HiChevronDoubleDown\n  \n    const handleClick = () => setIsOpen(!isOpen)\n\n\n    \n    return (\n      <StyledFooter isFinished={isFinished}>\n        <Row>\n          <StyledDetailsButton onClick={handleClick}>\n            {isOpen ? 'Hide' : 'Details'} <Icon />\n          </StyledDetailsButton>\n        </Row>\n        {isOpen && (\n          <Details style={{display: \"flex\", flexDirection: \"column\", height: \"100%\"}}>\n            <StyledDetails>\n\n                <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p style={{fontSize: \"80%\"}}>Deposit:</p>\n                  <TokenLink style={{color: \"#fbdb37\"}} href={projectLink} target=\"_blank\">\n                    {'View project site'} <BsArrowUpRightSquare style={{marginLeft: '5px'}}/>\n                </TokenLink>\n                </Container>\n        \n            </StyledDetails>\n            \n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p style={{fontSize: \"80%\"}}>Total Staked:</p>\n                  <p style={{fontSize: \"80%\"}}>{totalStaked}</p>\n                </Container>\n            </StyledDetails>\n\n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p style={{fontSize: \"80%\"}}>My Staked Amount:</p>\n                  <p style={{fontSize: \"80%\"}}><RiCoinLine style={{marginRight: \"6px\"}}/>{`3738.34`}</p>\n                </Container>\n            </StyledDetails>\n\n\n\n\n          </Details>\n        )}\n      </StyledFooter>\n    )\n  }\n\n\nconst PoolCard = (props) => {\n    const [approved, setApproved] = useState(false)\n    const [showDepositModal, setShowDepositModal] = useState(false)\n    const [showUnstakeModal, setShowUnstakeModal] = useState(false)\n    const masterChef = props.masterChef\n    const signer = props.signer\n\n    const handleModalOnClick = () => {\n        setShowDepositModal(prev => !prev)\n    }\n    const handleUnstakeModalOnClick = () => {\n      setShowUnstakeModal(prev => !prev)\n  }\n\n    const handleOnClick = () => {\n        setApproved(!approved)\n    }\n\n    const handleClaimClick = async (pid) => {\n      try {\n        \n        await userClaim(masterChef, pid)\n        \n      } catch (err) {console.log(err)}\n    }\n\n\n    const handleApproveClick = async (token) => {\n      try {\n        //pid, tokenAddress, masterchef, _signer\n        await setPoolAllowance(token, masterChef, signer)\n      } catch (err) {console.log(err)}\n    }\n    \n    if (props.pool !== undefined) {\n      const poolData = props.pool\n      const poolBalance = props.poolBalance\n      const pid = props.pid\n      const allowance = props.allowance\n      const answer = allowance.approved\n      const balance = props.balance\n      return (\n\n        <>\n    <DepositModal walletBalance={balance} pid={pid} showDepositModal={showDepositModal} setShowDepositModal={setShowDepositModal}/>\n    <UnstakeModal showUnstakeModal={showUnstakeModal} setShowUnstakeModal={setShowUnstakeModal} />\n    <ActualPoolCard>\n\n      <div style={{ padding: '24px' }}>\n\n\n          <div style={{ display: 'flex', flexDirection: 'row', flexWrap: \"wrap\", alignItems: 'center', justifyContent: \"space-between\"}}>\n            <Image style={{ marginRight: \"19px\" }}src={`/assets/images/CornLogo.png`} width={64} height={64} alt={\"COB\"} />\n            <CardTitle >\n           \n           <div style={{display: \"flex\", flexDirection: 'column', alignContent: \"center\", justifyContent: \"space-between\", textAlign: \"center\", marginBottom: \"12px\"}}>\n\n            {`${poolData.tokenStakeName}`} \n           </div>\n\n           <MultiplierBadge><GoVerified style={{marginRight: \"4px\"}}/>\n            {`${poolData.depositFee} Fees`}\n           </MultiplierBadge>\n           <MultiplierBadge>\n             {`${poolData.multiplier}`}\n           </MultiplierBadge>\n            </CardTitle>\n          </div>\n        \n\n            <StyledDetails>\n                <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p>APR:</p>\n                  <p><BsCalculatorFill style={{marginRight: \"6px\"}}/>{balance}</p>\n                </Container>\n        \n            </StyledDetails>\n            \n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p>Earn:</p>\n                  <p><BiCoinStack style={{marginRight: \"6px\"}}/>\n                    {`${poolData.tokenEarnName}`}\n                  </p>\n                </Container>\n            </StyledDetails>\n\n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p>Stake:</p>\n                  <p><RiCoinLine style={{marginRight: \"6px\"}}/>{`${poolData.tokenStakeName}`}</p>\n                </Container>\n            </StyledDetails>\n\n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <Container style={{ margin: \"3px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n                      <p style={{fontSize: \"60%\", fontWeight: \"800\"}}>\n                          {`COB Earned:`}\n                          </p>\n                      <p style={{color: \"#fbdb37\", fontSize: \"110%\", fontWeight: \"600\"}}>\n                          {`${toFixed(poolData.pendingCob, 3)}`}\n                        </p>\n                  </Container>\n                  <ClaimButton onClick={async () => handleClaimClick(pid)}>\n                        {`Claim`}\n                    </ClaimButton>\n                </Container>\n            </StyledDetails>\n\n            <Label  text={'COB earned'}/>\n            <StyledCardActions>\n  \n\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n\n                {answer ? (\n                <>\n                    <StakeButton onClick={handleModalOnClick}>\n                        {`Stake`}\n                    </StakeButton>\n                    <UnstakeButton onClick={handleUnstakeModalOnClick}>\n                        {`Unstake`}\n                    </UnstakeButton>\n                </>\n                ) : (\n                <ApproveButton onClick={async () => handleApproveClick(poolData.tokenStakeAddress)}>\n                    {`Approve Contract`}\n                </ApproveButton>\n                )}\n\n\n                {answer ? (\n                    <MultiplierBadge style={{margin: \"0px !important\", alignSelf: \"end\", }}>\n\n                            <FaCircle style={{marginBottom: \"5px\", fontSize: \"240%\"}}/>\n                            <p style={{marginBottom: \"3px\", fontSize: \"70%\"}}>Approved</p>\n                    </MultiplierBadge>\n                ) : (\n                    <MultiplierBadge style={{padding: \"6px\", margin: \"0px !important\", alignSelf: \"end\", }}>\n                        <FaRegCircle style={{marginBottom: \"0px\", fontSize: \"300%\"}}/>\n                        \n                    </MultiplierBadge>\n                )}\n\n           \n            </Container>\n\n           \n    \n            </StyledCardActions>\n\n      </div>\n\n\n      <CardFooter\n        projectLink={\"#\"}\n        totalStaked={`${toFixed(poolBalance, 2)}`}\n        blocksRemaining={\"10340233\"}\n        isFinished={false}\n        blocksUntilStart={\"0\"}\n        poolCategory={\"\"}\n        />\n        </ActualPoolCard> \n            \n            \n        </>\n    \n)\n    } else {\n      return (\n\n        <>\n    <DepositModal showDepositModal={showDepositModal} setShowDepositModal={setShowDepositModal}/>\n    <UnstakeModal showUnstakeModal={showUnstakeModal} setShowUnstakeModal={setShowUnstakeModal} />\n    <ActualPoolCard>\n\n      <div style={{ padding: '24px' }}>\n\n\n          <div style={{ display: 'flex', flexDirection: 'row', flexWrap: \"wrap\", alignItems: 'center', justifyContent: \"space-between\"}}>\n            <Image style={{ marginRight: \"19px\" }}src={`/assets/images/CornLogo.png`} width={64} height={64} alt={\"COB\"} />\n            <CardTitle >\n           \n           <div style={{display: \"flex\", flexDirection: 'column', alignContent: \"center\", justifyContent: \"space-between\", textAlign: \"center\", marginBottom: \"12px\"}}>\n\n           {`COB`} (Single)\n           </div>\n\n           <MultiplierBadge><GoVerified style={{marginRight: \"4px\"}}/>1% Fees</MultiplierBadge>\n           <MultiplierBadge>100x</MultiplierBadge>\n            </CardTitle>\n          </div>\n        \n\n            <StyledDetails>\n                <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p>APR:</p>\n                  <p><BsCalculatorFill style={{marginRight: \"6px\"}}/>100</p>\n                </Container>\n        \n            </StyledDetails>\n            \n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p>Earn:</p>\n                  <p><BiCoinStack style={{marginRight: \"6px\"}}/>COB</p>\n                </Container>\n            </StyledDetails>\n\n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <p>Stake:</p>\n                  <p><RiCoinLine style={{marginRight: \"6px\"}}/>COB</p>\n                </Container>\n            </StyledDetails>\n\n            <StyledDetails>\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                  <Container style={{ margin: \"3px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n                      <p style={{fontSize: \"60%\", fontWeight: \"800\"}}>\n                          {`COB Earned:`}\n                          </p>\n                      <p style={{color: \"#fbdb37\", fontSize: \"110%\", fontWeight: \"600\"}}>\n                          {`43.12`}\n                        </p>\n                  </Container>\n                  <HeaderButtonSecondary>\n                        {`Claim`}\n                    </HeaderButtonSecondary>\n                </Container>\n            </StyledDetails>\n\n            <Label  text={'COB earned'}/>\n            <StyledCardActions>\n  \n\n            <Container style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n\n                {approved ? (\n                <>\n                    <HeaderButtonSecondary onClick={handleModalOnClick}>\n                        {`Stake`}\n                    </HeaderButtonSecondary>\n                    <HeaderButtonSecondary onClick={handleUnstakeModalOnClick}>\n                        {`Unstake`}\n                    </HeaderButtonSecondary>\n                </>\n                ) : (\n                <HeaderButtonSecondary onClick={handleOnClick}>\n                    {`Approve Contract`}\n                </HeaderButtonSecondary>\n                )}\n\n\n                {approved ? (\n                    <MultiplierBadge style={{margin: \"0px !important\", alignSelf: \"end\", }}>\n\n                            <FaCircle style={{marginBottom: \"5px\", fontSize: \"240%\"}}/>\n                            <p style={{marginBottom: \"3px\", fontSize: \"70%\"}}>Approved</p>\n                    </MultiplierBadge>\n                ) : (\n                    <MultiplierBadge style={{padding: \"6px\", margin: \"0px !important\", alignSelf: \"end\", }}>\n                        <FaRegCircle style={{marginBottom: \"0px\", fontSize: \"300%\"}}/>\n                        \n                    </MultiplierBadge>\n                )}\n\n           \n            </Container>\n\n           \n    \n            </StyledCardActions>\n\n      </div>\n\n\n      <CardFooter\n        projectLink={\"#\"}\n        totalStaked={\"323.34\"}\n        blocksRemaining={\"10340233\"}\n        isFinished={false}\n        blocksUntilStart={\"0\"}\n        poolCategory={\"\"}\n        />\n        </ActualPoolCard> \n            \n            \n        </>\n    \n)\n    }\n    \n}\n\nexport default PoolCard\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/Badges.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/UnstakeModal.js",["266","267","268","269","270","271","272","273","274","275"],"\nimport React, {useState, useEffect} from 'react'\nimport styled from \"styled-components\"\nimport {useWeb3React} from \"@web3-react/core\";\n//addresses etc\nimport {ERC20Abi, MasterChefABI} from \"../../../config/abis\" //will need forapprove button\nimport { addresses } from \"../../../config/addresses\";\n\nimport {Container, Card, Modal} from \"react-bootstrap\"\nimport {HeaderButtonSecondary} from \"../../vaults/index\"\n\nimport {FaTimesCircle, FaWallet} from \"react-icons/fa\"\n\nconst ExitButton = styled.button`\n    outline: 0;\n    border: 0;\n    background-color: transparent !important;\n    align-items: flex-start;\n    color: #fbdb37;\n    cursor: pointer;\n    font-size: 22px;\n    font-weight: 600;\n    height: 32px;\n    margin-bottom: 12px;\n    align-self: flex-end;\n`\nconst FakeBackground = styled.div`\n    width: 100vw;\n    height: 100vh;\n    z-index: 9998;\n    backdrop-filter: blur(12px);\n    background: #transparent !important;\n    position: fixed;\n    display: flex;\n    top: -1px;\n    padding: 60px;\n`\n\nconst ModalContainer = styled(Container)`\n    display: grid;\n    z-index: 9999;\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n    \n    height: 100%;\n    width: auto;\n    padding: 0;\n`\nconst ModalCard = styled(Card)`\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    border-radius: 12px;\n    height: 60%;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nconst ModalCardFooter = styled.div`\n    border-top: 1px solid #7a7f87;\n    text-align: center;\n    font-weight: 800;\n    font-size: 200%;\n    color: #a3a7ac;\n    padding: 12px;\n    height: 50%;\n    width: 100%;\n    background-color: #5e6268;\n    align-self: stretch;\n    border-radius: 0 0 12px 12px;\n\n`\nconst ModalCardContentContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    margin-top: 1em;\n    justify-content: center;\n    align-items: center;\n`\n\nconst TokenInput = styled.input`\n  \n    width: 90%;\n    height: 70px !important;\n    border: none;\n    background: #292C2D;\n    color: white;\n    border-radius: 20px;\n    border-width: 1px !important;\n    border-color: #4e5456 !important;\n    padding: 7px;\n    font-size: 22px;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n\n`\n\nconst UnstakeModal = ({showUnstakeModal, setShowUnstakeModal}) => {\n    const {active, account, library, connector} = useWeb3React();\n\n\n    return (\n        <>\n        { showUnstakeModal ? (\n        <FakeBackground>\n        <ModalContainer showUnstakeModal={showUnstakeModal}>\n            <ModalCard>\n                <ModalCardContentContainer>\n                    <ExitButton onClick={() => setShowUnstakeModal(prev => !prev)}><FaTimesCircle/></ExitButton>\n                    <Container style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", marginBottom: \"18px\"}}>\n                        <FaWallet/>\n                        {`Balance: 3738.34`}\n                    </Container>\n                    <TokenInput />\n                    <Container style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", marginBottom: \"18px\"}}>\n                    <HeaderButtonSecondary>Withdraw</HeaderButtonSecondary>\n                    <HeaderButtonSecondary>Max</HeaderButtonSecondary>\n                    </Container>\n\n\n                </ModalCardContentContainer>\n                <ModalCardFooter>\n                    Withdraw\n                </ModalCardFooter>\n            </ModalCard>\n\n        </ModalContainer>\n        </FakeBackground>\n        ) : (null)}\n        </>\n    )\n}\n\nexport default UnstakeModal\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/components/DepositModal.js",["276","277","278","279","280","281","282","283","284","285","286","287"],"\nimport React, {useState, useEffect} from 'react'\nimport styled from \"styled-components\"\nimport {useWeb3React} from \"@web3-react/core\";\nimport {ethers} from \"ethers\";\n//addresses etc\nimport {ERC20Abi, MasterChefABI} from \"../../../config/abis\" //will need forapprove button\nimport { addresses } from \"../../../config/addresses\";\nimport {writeContract, userStake} from \"../../../utils/nft\";\n\nimport {Container, Card, Modal} from \"react-bootstrap\"\nimport {HeaderButtonSecondary} from \"../../vaults/index\"\n\nimport {FaTimesCircle, FaWallet} from \"react-icons/fa\"\n\nconst ExitButton = styled.button`\n    outline: 0;\n    border: 0;\n    background-color: transparent !important;\n    align-items: flex-start;\n    color: #fbdb37;\n    cursor: pointer;\n    font-size: 22px;\n    font-weight: 600;\n    height: 32px;\n    margin-bottom: 12px;\n    align-self: flex-end;\n`\nconst FakeBackground = styled.div`\n    width: 100vw;\n    height: 100vh;\n    z-index: 9998;\n    backdrop-filter: blur(12px);\n    background: #transparent !important;\n    position: fixed;\n    display: flex;\n    top: -1px;\n    padding: 60px;\n`\n\nconst ModalContainer = styled(Container)`\n    display: grid;\n    z-index: 9999;\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n    \n    height: 100%;\n    width: auto;\n    padding: 0;\n`\nconst ModalCard = styled(Card)`\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n    border-radius: 12px;\n    height: 60%;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nconst ModalCardFooter = styled.div`\n    border-top: 1px solid #7a7f87;\n    text-align: center;\n    font-weight: 800;\n    font-size: 200%;\n    color: #a3a7ac;\n    padding: 12px;\n    height: 50%;\n    width: 100%;\n    background-color: #5e6268;\n    align-self: stretch;\n    border-radius: 0 0 12px 12px;\n\n`\nconst ModalCardContentContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    margin-top: 1em;\n    justify-content: center;\n    align-items: center;\n`\nconst DepositForm = styled.form`\n\n`\nconst TokenInput = styled.input`\n  \n    width: 90%;\n    height: 70px !important;\n    border: none;\n    background: #292C2D;\n    color: white;\n    border-radius: 20px;\n    border-width: 1px !important;\n    border-color: #4e5456 !important;\n    padding: 7px;\n    font-size: 22px;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n\n`\nconst DepositButton = styled(HeaderButtonSecondary)`\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:disabled {\n        background: transparent;\n        border-color: #ffc67a;\n        border-width: 3px;\n        color: #ffc67a;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\n\nconst DepositModal = ({showDepositModal, setShowDepositModal, walletBalance, pid}) => {\n    const {active, account, library, connector} = useWeb3React()\n    const [masterChefContract, setMasterChefContract] = useState(null)\n    const [amount, setAmount] = useState('')\n    const [userBalance, setUserBalance] = useState(walletBalance)\n    const [poolId, setPoolId] = useState(pid)\n\n    //props\n    // const bal = props.walletBalance;\n    // console.log(\"pooooop\")\n    // console.log(bal)\n\n    useEffect( () => {\n        if (active) {\n          const masterChef = writeContract(\n              active, \n              library.getSigner(), \n              account,\n              addresses.masterChef,\n              MasterChefABI,\n              )\n          .then( value => setMasterChefContract(value))\n        } else {\n          const noData = setMasterChefContract(null)\n        }\n        \n        \n      }, [account, library])\n\n    const handleStakeOnClick = async (pid, amount) => {\n        try {\n            if (active) {\n                console.log(pid)\n\n                await userStake(masterChefContract, pid, amount)\n            }  \n        } catch (err) {console.log(err)}\n\n    }\n\n    //hide and show button\n    let button;\n\n    if (amount == '') {\n        button = <DepositButton disabled>Deposit</DepositButton>;\n      } else if (amount !== ''){\n        button = <DepositButton onClick={async () => handleStakeOnClick(pid, amount)}>Deposit</DepositButton>;\n      } else {\n        button = <DepositButton disabled >Deposit</DepositButton>;\n      }\n\n    return (\n\n        <>\n        { showDepositModal ? (\n        <FakeBackground>\n        <ModalContainer showDepositModal={showDepositModal}>\n            <ModalCard>\n                <ModalCardContentContainer>\n                    <DepositForm>\n\n                    <ExitButton onClick={() => setShowDepositModal(prev => !prev)}><FaTimesCircle/></ExitButton>\n                    <Container style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", marginBottom: \"18px\"}}>\n                        <FaWallet/>\n                        {walletBalance !== 0 ? walletBalance : \"0\"}\n                    </Container>\n                    <TokenInput \n                        placeholder = \"0.00\"\n                        value={amount}\n                        onChange = {(e) => setAmount(e.target.value)}\n                    />\n                    <Container style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", marginBottom: \"18px\"}}>\n                    {button}\n                    <DepositButton>Max</DepositButton>\n                    </Container>\n\n                    </DepositForm>\n                </ModalCardContentContainer>\n                <ModalCardFooter>\n                    Deposit\n                </ModalCardFooter>\n            </ModalCard>\n\n        </ModalContainer>\n        </FakeBackground>\n        ) : (null)}\n        </>\n    )\n}\n\nexport default DepositModal\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/config/pools.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/fetchUserData.js",["288","289"],"import React from \"react\";\nimport {ethers} from \"ethers\";\nimport {writeContract} from \"./nft\"\n\nconst getPoolInfo = async (masterchef, poolLength) => {\n    const pLength = poolLength\n\n    const poolInfo = [];\n    for (let index = 0; index < pLength; index++) {\n        const data = await masterchef.poolInfo(index);\n        poolInfo.push(data);\n        \n    }\n\n    return poolInfo;\n} // works\n\n// const checkUserApprovedPool = async (tokendeposit, account, signer, masterchef, erc20abi) => {\n//     const erc20 = await fetchContract(tokendeposit, erc20abi, signer);\n//     const allowance = await erc20.allowance(account, masterchef.address);\n//     const formattedAllowance = ethers.utils.formatUnits(allowance, \"ether\");\n//     console.log(formattedAllowance)\n//     if (formattedAllowance !== \"0.0\") {\n//         return true\n//     } else {\n//         return false\n//     }\n// }\n\nexport const fetchUserPoolData = async (_masterChef, _library, _account, poolLength) => {\n\n    const pLength = poolLength\n    const accountAddress = _account;\n    const poolInfo = await getPoolInfo(_masterChef, poolLength);\n\n\n    const userPoolDataPromises = [];\n    for (let pid = 0; pid < pLength; pid++) {\n        const poolData = _masterChef.pendingCob(pid, accountAddress);\n        userPoolDataPromises.push(poolData);\n    };\n\n    const dataPack = Promise.all(userPoolDataPromises)\n    .then(values => {\n        const data = values.map((value, index) => {\n            const pending = ethers.utils.formatUnits(value, \"ether\");\n\n            const pool = poolInfo[index];\n            const lpToken = pool.lpToken;\n            const allocationPoints = ethers.utils.formatUnits(pool.allocPoint, \"wei\");\n            const accCobPerShare = ethers.utils.formatUnits(pool.accCobPerShare, \"ether\");\n            const depositFee = pool.depositFeeBP;\n            // const userApproved = fetchPoolAllowance() // fix this dummy\n            // pools, _signer, _account, _masterchef\n\n            return {\n                pendingReward: pending, \n                poolInformation: {\n                    depositTokenAddress: lpToken,\n                    allocation: allocationPoints,\n                    rewardPerShare: accCobPerShare,\n                    fee: depositFee\n                }};\n        })\n        return data;\n    })\n    return dataPack\n}\n\nexport const getPoolLength = async (_masterchef) => {\n    _masterchef.poolLength().then( res => {\n        return res\n    }); \n}\n\nexport const mapPendingToOriginalData = (newData, oldData, _masterchef, poolLength) => {\n    const staticPoolLength = oldData.length;\n    if (poolLength == staticPoolLength) {\n        const recycledData = newData.map((value, index) => {\n            const pending = value.pendingReward;\n            return {\n                pendingCob: pending,\n                ...oldData[index]\n            };\n        });\n\n        return recycledData;\n\n    } else {\n\n        console.log(`Devie needs to update static pool folder.  Your fetched pool length is ${poolLength} but your static pool length is ${staticPoolLength}`);\n        return oldData;\n\n    }\n\n\n}\n\nexport const getPoolBalance = async (poolData, _active, signer, account, abi, plength) => {\n\n\n    const balances = poolData.map( async (value, index) => {\n        const address = value.tokenStakeAddress\n        const erc20 =  await writeContract(_active, signer, account, address, abi)\n        const masterChefAddress = \"0xC71EbC899BCC111F39B2715B5d2D397E671B5bd2\"\n        const balance =  await erc20.balanceOf(masterChefAddress)\n        const stringbal = ethers.utils.formatUnits(balance, \"ether\")\n        \n        return stringbal\n    });\n\n    const results = await Promise.all(balances)\n    return results\n}\n\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/components/NFTFooter.js",["290","291","292","293"],"import React, {useState, useEffect} from 'react'\nimport styled from \"styled-components\";\nimport {StyledDetailsButton, NFTLineBreak} from \"../../pools/components/PoolCard\";\nimport {MultiplierBadge} from \"../../pools/components/Badges\"\nimport {HiChevronDoubleUp, HiChevronDoubleDown} from \"react-icons/hi\"\nimport {FaTicketAlt, FaCoins} from \"react-icons/fa\"\nimport {Container, Card, Button} from \"react-bootstrap\";\n\nconst NFTFooterBadge = styled(MultiplierBadge)`\n    width: 100%;\n    height: 100%;\n    padding: 0px;\n    padding-top: 1px;\n    margin-bottom: 0px;\n    margin-top: 1px;\n`\n\n\nconst DetailsButtonWrapper = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: flex-end;\n    margin-top: 12px;\n`\n\nconst DetailsRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n`\n\nconst DetailsGrid = styled(Container)`\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n\n    place-items: center;\n    column-gap: 2px;\n    row-gap: 3px;\n\n`\n\nconst DetailsDropDownGrid = styled(Container)`\n    margin-top: 12px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n \n    place-items: center;\n    column-gap: 2px;\n    row-gap: 12px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n    }\n\n`\n\nexport const NFTFooter = () => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    const handleDetailsOnClick = () => {\n        setIsOpen( prev => !prev)\n    }\n    return (\n        <>\n             \n        <DetailsButtonWrapper>\n            <StyledDetailsButton style={{justifyContent: \"flex-end\"}} onClick={handleDetailsOnClick}>\n                Details{isOpen ? <HiChevronDoubleUp/> : <HiChevronDoubleDown/>}\n            </StyledDetailsButton>\n        </DetailsButtonWrapper>\n\n        { isOpen && \n            <DetailsDropDownGrid>\n                <DetailsRow>\n                    <FaTicketAlt style={{color: \"#fbdb37\", fontSize: \"200%\"}}></FaTicketAlt>\n                </DetailsRow>\n            \n                <DetailsGrid>\n                    <NFTFooterBadge><p style={{fontSize: \"1.2em\", marginBottom: \"0px\"}}>Performance Fee</p></NFTFooterBadge>\n                    <NFTFooterBadge><p style={{fontSize: \"1.2em\", marginBottom: \"0px\"}}>COB Rewards</p></NFTFooterBadge>\n                    <NFTFooterBadge><p style={{fontSize: \"1.2em\", marginBottom: \"0px\"}}>Accumulator</p></NFTFooterBadge>\n                </DetailsGrid>\n\n                <DetailsRow>\n                    <FaCoins style={{color: \"#fbdb37\", fontSize: \"200%\"}}></FaCoins>\n                    <p style={{marginLeft: \"3px\"}}></p>\n                </DetailsRow>\n\n                <DetailsGrid>\n                    <NFTFooterBadge><p style={{fontSize: \"1.2em\", marginBottom: \"0px\"}}>USDT</p></NFTFooterBadge>\n                    <NFTFooterBadge><p style={{fontSize: \"1.2em\", marginBottom: \"0px\"}}>DAI</p></NFTFooterBadge>\n                    <NFTFooterBadge><p style={{fontSize: \"1.2em\", marginBottom: \"0px\"}}>USDC</p></NFTFooterBadge>\n                    <NFTFooterBadge><p style={{fontSize: \"1.2em\", marginBottom: \"0px\"}}>MiMATIC</p></NFTFooterBadge>\n                </DetailsGrid>\n            </DetailsDropDownGrid>\n          \n        }\n\n        </>\n    )\n}\n\nexport default NFTFooter\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/components/NFTCard.js",["294","295"],"import React from 'react'\nimport {Container, Card, Button} from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nimport {userMint} from \"../../../utils/nft\";\n\n\nimport {NFTFooter} from \"./NFTFooter\";\nimport {EthIcon, BitcoinIcon, DollarIcon} from \"../../vaults/components/CreateVault\"\n\n\nexport const MyNFTCard = styled(Card)`\n    border-radius: 8px;\n    height: auto;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nconst MyNFTCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    align-items: flex-start;\n    align-content: flex-start;\n    justify-content: space-around;\n    gap: 8px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n      }\n`\nconst NFTImageWrapper = styled.img`\n    border-radius: 5px;\n`\nconst NFTBrandName = styled.p`\n    font-size: 70%;\n    color: #fbdb37;\n`\nconst NFTTitle = styled.h3`\n    font-size: 120%;\n    font-weight: 600;\n    color: #fbfbfb;\n`\nconst NFTLineBreak = styled.hr`\n      color: #393C3F;\n      width: 100%;\n`\nconst PriceRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    margin-left: 0px;\n    align-content: space-between;\n    justify-content: space-between;\n    align-items: baseline;\n    gap: 12px;\n`\n\nconst ButtonWrapper = styled.div`\n      display: flex;\n      flex-direction: row;\n      width: 40%;\n      height: auto;\n  \n`\n\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: auto;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n   \n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\n\nexport const NFTCard = (props) => {\n\n    const handleMint = async () => {\n        userMint(\n            props.mintData.nftContract, \n            props.mintData.account, \n            props.mintData.nftURI\n            )\n    }\n    return (\n        <>\n           <MyNFTCard>\n                <MyNFTCardContainer>\n                <NFTImageWrapper src={props.image}></NFTImageWrapper>\n                <NFTBrandName>CornFinance</NFTBrandName>\n                <NFTTitle>{props.title}</NFTTitle>\n                <NFTLineBreak size=\"8\"/>\n                <PriceRow>\n                    <ButtonWrapper style={{justifyContent: \"flex-start\"}}><MintButton onClick={async () => handleMint()}>Mint Now</MintButton></ButtonWrapper>\n\n                    <NFTBrandName style={{fontSize: \"0.88em\"}}>Asking Price</NFTBrandName>\n                    <NFTTitle><EthIcon />100.00</NFTTitle>\n\n                </PriceRow>\n\n\n                <NFTFooter id={props.id}></NFTFooter>  \n                </MyNFTCardContainer>\n            </MyNFTCard> \n        </>\n    )\n}\n\nexport default NFTCard\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/components/NFTHeading.js",["296"],"import React from 'react'\nimport styled from \"styled-components\"\nimport {Container, Card, Button} from \"react-bootstrap\";\n\n\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`\n\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`\nexport const NFTHeading = () => {\n    return (\n        <>\n           <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Strategy Marketplace</BigHeading>\n                    <LittleHeading>Acquire new strategies by minting an NFT to suit your trading style</LittleHeading>\n                </HeadingBackground>\n            </HeadingContainer>            \n        </>\n    )\n}\n\nexport default NFTHeading\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/useRefresh.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/contexts/RefreshContext.js",[],"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/Footer.js",["297","298","299"],"import React from 'react'\nimport styled, { keyframes } from \"styled-components\"\nimport {Container, Button} from \"react-bootstrap\"\n\n\n\n\nconst FooterImage = styled.svg`\n    background-size: cover;\n    background-image: url(\"/assets/images/mountainfooter.svg\");\n    background-position: bottom;\n    background-repeat: no-repeat;\n    width: 100%;\n    height: auto;\n    transform: scaleY(1.8);\n    margin-top: 30px;\n    \n`\n\n\nexport const Footer = () => {\n    return (\n        <>\n     \n            <FooterImage></FooterImage>\n  \n            \n        </>\n    )\n}\n\nexport default Footer\n\n\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/vaults/components/HowToSection.js",["300","301","302"],"import React from 'react'\nimport styled from \"styled-components\"\nimport {Container, Button, Card} from \"react-bootstrap\"\nimport {BiPurchaseTagAlt} from \"react-icons/bi\"\nimport {RiRefund2Line, RiFundsLine} from \"react-icons/ri\"\n\n//components\nimport {BodyContentCard, BodyBigHeading, BodyContentCardContainer, BodyLittleHeading} from \"../index\"\n\nconst ContainerRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    height: auto;\n    width: 100%;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n    }\n`\nconst ContainerColumn = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n`\nconst CardOne = styled(Card)`\n\n    align-self: center;\n    height: auto;\n    padding: 19px;\n    width: 90%;\n    background-color: #1D1E20;\n    background-radius: 8px;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    transform: rotate(-20deg);\n    left: -3%;\n    width: 30%;\n    \n\n    @media (max-width: 768px) {\n        width: 100%;\n        transform: rotate(0deg);\n        left: 0%;\n        top: -22px;\n    }\n\n`\nconst CardTwo = styled(Card)`\n    align-self: center;\n    height: auto;\n    padding: 19px;\n    width: 90%;\n    background-color: #1D1E20;\n    background-radius: 8px;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    top: -38px;\n    width: 30%;\n    \n\n    @media (max-width: 768px) {\n        width: 100%;\n        top: 0px;\n    }\n` \nconst CardThree = styled(Card)`\n    align-self: center;\n    height: auto;\n    padding: 19px;\n    width: 90%;\n    background-color: #1D1E20;\n    background-radius: 8px;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    transform: rotate(30deg);\n    right: -3%;\n    width: 30%;\n\n    @media (max-width: 768px) {\n        width: 100%;\n        transform: rotate(0deg);\n        right: 0%;\n        bottom: -22px;\n\n    }\n`\nconst BigCard = styled(Card)`\n    background-image: url(\"assets/images/CardBackground.svg\");\n    background-position: relative;\n    border: none;\n    background-size: cover;\n    background-repeat: no-repeat;\n    border-radius: 9px;\n\n`\n\nexport const HowToSection = () => {\n    return (\n        <>\n            <BigCard>\n\n            <ContainerRow>\n                <CardOne >\n                    <BodyContentCardContainer>\n                        <BodyBigHeading style={{fontSize: \"80%\"}}>1. Purchase a Vault</BodyBigHeading>\n                        <hr></hr>\n                        <BodyLittleHeading style={{fontSize: \"70%\"}}>\n                            Purchase a vault from the marketplace to get started.  Each Vault has a unique trading algorithm, you can check it's details to learn more.\n                        </BodyLittleHeading>\n                        <BodyLittleHeading style={{textAlign: \"center\", color: \"#fbdb37\", fontSize: \"150%\", fontWeight: \"600\"}}>\n                        <BiPurchaseTagAlt/> \n                        </BodyLittleHeading>\n                    </BodyContentCardContainer>\n                </CardOne>\n\n                <CardTwo>\n                    <BodyContentCardContainer>\n                        <BodyBigHeading style={{fontSize: \"80%\"}}>2. Deposit Funds</BodyBigHeading>\n                        <hr></hr>\n                        <BodyLittleHeading style={{fontSize: \"70%\"}}>\n                            Deposit any amount of funds into the vault that you'd like to trade.  If you're swapping 10 ETH for USDC, then you would deposit 10 ETH into your vault.\n                        </BodyLittleHeading>\n                        <BodyLittleHeading style={{textAlign: \"center\", color: \"#fbdb37\", fontSize: \"150%\", fontWeight: \"600\"}}>\n                        <RiRefund2Line style={{textAlign: \"center\"}}/>\n                        </BodyLittleHeading>\n                    </BodyContentCardContainer>\n                </CardTwo>\n\n                <CardThree>\n                    <BodyContentCardContainer>\n                        <BodyBigHeading style={{fontSize: \"80%\"}}>3. Relax</BodyBigHeading>\n                        <hr></hr>\n                        <BodyLittleHeading style={{fontSize: \"70%\"}}>\n                            Every 30 minutes our price oracles update and check your NFTs trade conditions. So long as your conditions are met then the swaps will automatically happen. \n                        </BodyLittleHeading>\n                        <BodyLittleHeading style={{textAlign: \"center\", color: \"#fbdb37\", fontSize: \"150%\", fontWeight: \"600\"}}>\n                        <RiFundsLine/>\n                        </BodyLittleHeading>\n                    </BodyContentCardContainer>\n                </CardThree>\n            </ContainerRow>\n            </BigCard>\n\n        </>\n    )\n}\n\nexport default HowToSection\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/components/Chart.js",["303","304","305","306"],"import React, {useState, useEffect} from 'react'\nimport styled from \"styled-components\"\nimport {Container, Button, Card} from \"react-bootstrap\"\nimport TradingViewWidget, { Themes, IntervalTypes } from 'react-tradingview-widget';\n\nconst ChartContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    height: 420px;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const Chart = () => {\n\n    \n\n    return (\n        <>\n            <ChartContainer>\n                <TradingViewWidget\n                    symbol=\"BINANCE:ETHUSDT\"\n                    interval={IntervalTypes.D}\n                    theme={Themes.DARK}\n                    locale=\"en\"\n                    autosize\n                />\n            </ChartContainer>\n        </>\n    )\n}\n\nexport default Chart\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/components/VaultNFTCard.js",["307","308","309","310"],"import React from 'react'\nimport {Container, Card, Button} from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nimport {userMint} from \"../../../utils/nft\";\n\n\nimport {VaultNFTFooter} from \"./VaultNFTFooter\";\nimport {EthIcon, BitcoinIcon, DollarIcon} from \"../../vaults/components/CreateVault\"\n\n\nexport const MyNFTCard = styled(Card)`\n    border-radius: 8px;\n    height: auto;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nconst MyNFTCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    align-items: flex-start;\n    align-content: flex-start;\n    justify-content: space-around;\n    gap: 8px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n      }\n`\nconst NFTImageWrapper = styled.img`\n    border-radius: 5px;\n`\nconst NFTBrandName = styled.p`\n    font-size: 70%;\n    color: #fbdb37;\n`\nconst NFTTitle = styled.h3`\n    font-size: 120%;\n    font-weight: 600;\n    color: #fbfbfb;\n`\nconst NFTLineBreak = styled.hr`\n      color: #393C3F;\n      width: 100%;\n`\nconst PriceRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    margin-left: 0px;\n    align-content: space-between;\n    justify-content: space-between;\n    align-items: baseline;\n    gap: 12px;\n`\n\nconst ButtonWrapper = styled.div`\n      display: flex;\n      flex-direction: row;\n      width: 40%;\n      height: auto;\n  \n`\n\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: auto;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n   \n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\n\nexport const VaultNFTCard = (props) => {\n\n\n    return (\n        <>\n           <MyNFTCard>\n                <MyNFTCardContainer>\n                <NFTImageWrapper src={props.image}></NFTImageWrapper>\n                <NFTBrandName>CornFinance</NFTBrandName>\n                <NFTTitle>{props.title}</NFTTitle>\n                <NFTLineBreak size=\"8\"/>\n                <PriceRow>\n                    <ButtonWrapper style={{justifyContent: \"flex-start\"}}><MintButton >Execute</MintButton></ButtonWrapper>\n                    <ButtonWrapper style={{justifyContent: \"flex-start\"}}><MintButton >Flatten</MintButton></ButtonWrapper>\n                    \n                    <EthIcon />\n                    <NFTTitle>Accumulator</NFTTitle>\n\n                </PriceRow>\n\n\n                </MyNFTCardContainer>\n            </MyNFTCard> \n        </>\n    )\n}\n\nexport default VaultNFTCard\n","/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/components/VaultNFTFooter.js",["311","312","313","314","315","316","317","318","319"],{"ruleId":"320","severity":1,"message":"321","line":11,"column":9,"nodeType":"322","messageId":"323","endLine":11,"endColumn":21},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"320","severity":1,"message":"328","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":25},{"ruleId":"320","severity":1,"message":"329","line":1,"column":27,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"330","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":15},{"ruleId":"320","severity":1,"message":"331","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":19},{"ruleId":"320","severity":1,"message":"332","line":4,"column":35,"nodeType":"322","messageId":"323","endLine":4,"endColumn":39},{"ruleId":"320","severity":1,"message":"329","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":24},{"ruleId":"320","severity":1,"message":"328","line":1,"column":26,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"333","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":21},{"ruleId":"320","severity":1,"message":"334","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":14},{"ruleId":"320","severity":1,"message":"335","line":8,"column":34,"nodeType":"322","messageId":"323","endLine":8,"endColumn":42},{"ruleId":"320","severity":1,"message":"336","line":8,"column":44,"nodeType":"322","messageId":"323","endLine":8,"endColumn":48},{"ruleId":"320","severity":1,"message":"337","line":67,"column":7,"nodeType":"322","messageId":"323","endLine":67,"endColumn":22},{"ruleId":"320","severity":1,"message":"338","line":8,"column":28,"nodeType":"322","messageId":"323","endLine":8,"endColumn":35},{"ruleId":"320","severity":1,"message":"329","line":1,"column":27,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"339","line":8,"column":10,"nodeType":"322","messageId":"323","endLine":8,"endColumn":16},{"ruleId":"320","severity":1,"message":"340","line":8,"column":18,"nodeType":"322","messageId":"323","endLine":8,"endColumn":27},{"ruleId":"320","severity":1,"message":"341","line":53,"column":39,"nodeType":"322","messageId":"323","endLine":53,"endColumn":48},{"ruleId":"320","severity":1,"message":"342","line":53,"column":50,"nodeType":"322","messageId":"323","endLine":53,"endColumn":58},{"ruleId":"343","severity":1,"message":"344","line":64,"column":8,"nodeType":"345","endLine":64,"endColumn":10,"suggestions":"346"},{"ruleId":"320","severity":1,"message":"347","line":1,"column":8,"nodeType":"322","messageId":"323","endLine":1,"endColumn":13},{"ruleId":"320","severity":1,"message":"328","line":1,"column":26,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"333","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":21},{"ruleId":"320","severity":1,"message":"335","line":5,"column":34,"nodeType":"322","messageId":"323","endLine":5,"endColumn":42},{"ruleId":"320","severity":1,"message":"336","line":5,"column":44,"nodeType":"322","messageId":"323","endLine":5,"endColumn":48},{"ruleId":"348","severity":1,"message":"349","line":232,"column":16,"nodeType":"350","messageId":"351","endLine":232,"endColumn":18},{"ruleId":"348","severity":1,"message":"349","line":232,"column":31,"nodeType":"350","messageId":"351","endLine":232,"endColumn":33},{"ruleId":"348","severity":1,"message":"349","line":232,"column":49,"nodeType":"350","messageId":"351","endLine":232,"endColumn":51},{"ruleId":"320","severity":1,"message":"339","line":1,"column":10,"nodeType":"322","messageId":"323","endLine":1,"endColumn":16},{"ruleId":"320","severity":1,"message":"352","line":10,"column":30,"nodeType":"322","messageId":"323","endLine":10,"endColumn":37},{"ruleId":"320","severity":1,"message":"341","line":10,"column":39,"nodeType":"322","messageId":"323","endLine":10,"endColumn":48},{"ruleId":"320","severity":1,"message":"353","line":10,"column":50,"nodeType":"322","messageId":"323","endLine":10,"endColumn":58},{"ruleId":"320","severity":1,"message":"354","line":10,"column":60,"nodeType":"322","messageId":"323","endLine":10,"endColumn":70},{"ruleId":"320","severity":1,"message":"339","line":4,"column":9,"nodeType":"322","messageId":"323","endLine":4,"endColumn":15},{"ruleId":"320","severity":1,"message":"355","line":13,"column":24,"nodeType":"322","messageId":"323","endLine":13,"endColumn":32},{"ruleId":"320","severity":1,"message":"356","line":18,"column":9,"nodeType":"322","messageId":"323","endLine":18,"endColumn":16},{"ruleId":"320","severity":1,"message":"357","line":18,"column":18,"nodeType":"322","messageId":"323","endLine":18,"endColumn":29},{"ruleId":"320","severity":1,"message":"358","line":18,"column":31,"nodeType":"322","messageId":"323","endLine":18,"endColumn":41},{"ruleId":"320","severity":1,"message":"359","line":44,"column":7,"nodeType":"322","messageId":"323","endLine":44,"endColumn":17},{"ruleId":"320","severity":1,"message":"360","line":100,"column":7,"nodeType":"322","messageId":"323","endLine":100,"endColumn":27},{"ruleId":"320","severity":1,"message":"361","line":110,"column":7,"nodeType":"322","messageId":"323","endLine":110,"endColumn":21},{"ruleId":"320","severity":1,"message":"362","line":121,"column":7,"nodeType":"322","messageId":"323","endLine":121,"endColumn":17},{"ruleId":"320","severity":1,"message":"363","line":128,"column":7,"nodeType":"322","messageId":"323","endLine":128,"endColumn":21},{"ruleId":"320","severity":1,"message":"364","line":133,"column":7,"nodeType":"322","messageId":"323","endLine":133,"endColumn":17},{"ruleId":"320","severity":1,"message":"365","line":197,"column":12,"nodeType":"322","messageId":"323","endLine":197,"endColumn":23},{"ruleId":"320","severity":1,"message":"366","line":197,"column":25,"nodeType":"322","messageId":"323","endLine":197,"endColumn":39},{"ruleId":"320","severity":1,"message":"341","line":199,"column":38,"nodeType":"322","messageId":"323","endLine":199,"endColumn":47},{"ruleId":"320","severity":1,"message":"367","line":203,"column":19,"nodeType":"322","messageId":"323","endLine":203,"endColumn":25},{"ruleId":"320","severity":1,"message":"368","line":215,"column":19,"nodeType":"322","messageId":"323","endLine":215,"endColumn":25},{"ruleId":"343","severity":1,"message":"369","line":217,"column":8,"nodeType":"345","endLine":217,"endColumn":17,"suggestions":"370"},{"ruleId":"320","severity":1,"message":"368","line":226,"column":19,"nodeType":"322","messageId":"323","endLine":226,"endColumn":25},{"ruleId":"343","severity":1,"message":"371","line":228,"column":8,"nodeType":"345","endLine":228,"endColumn":21,"suggestions":"372"},{"ruleId":"320","severity":1,"message":"347","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":13},{"ruleId":"320","severity":1,"message":"328","line":2,"column":16,"nodeType":"322","messageId":"323","endLine":2,"endColumn":25},{"ruleId":"320","severity":1,"message":"329","line":2,"column":27,"nodeType":"322","messageId":"323","endLine":2,"endColumn":35},{"ruleId":"320","severity":1,"message":"321","line":3,"column":10,"nodeType":"322","messageId":"323","endLine":3,"endColumn":22},{"ruleId":"320","severity":1,"message":"373","line":4,"column":10,"nodeType":"322","messageId":"323","endLine":4,"endColumn":19},{"ruleId":"320","severity":1,"message":"374","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":15},{"ruleId":"320","severity":1,"message":"375","line":37,"column":7,"nodeType":"322","messageId":"323","endLine":37,"endColumn":17},{"ruleId":"320","severity":1,"message":"376","line":38,"column":11,"nodeType":"322","messageId":"323","endLine":38,"endColumn":15},{"ruleId":"377","severity":1,"message":"378","line":139,"column":38,"nodeType":"379","messageId":"380","endLine":139,"endColumn":39,"suggestions":"381"},{"ruleId":"377","severity":1,"message":"378","line":150,"column":38,"nodeType":"379","messageId":"380","endLine":150,"endColumn":39,"suggestions":"382"},{"ruleId":"320","severity":1,"message":"339","line":4,"column":9,"nodeType":"322","messageId":"323","endLine":4,"endColumn":15},{"ruleId":"320","severity":1,"message":"383","line":11,"column":20,"nodeType":"322","messageId":"323","endLine":11,"endColumn":24},{"ruleId":"320","severity":1,"message":"384","line":11,"column":26,"nodeType":"322","messageId":"323","endLine":11,"endColumn":32},{"ruleId":"320","severity":1,"message":"385","line":13,"column":10,"nodeType":"322","messageId":"323","endLine":13,"endColumn":29},{"ruleId":"320","severity":1,"message":"386","line":14,"column":9,"nodeType":"322","messageId":"323","endLine":14,"endColumn":26},{"ruleId":"320","severity":1,"message":"387","line":14,"column":28,"nodeType":"322","messageId":"323","endLine":14,"endColumn":47},{"ruleId":"320","severity":1,"message":"356","line":16,"column":9,"nodeType":"322","messageId":"323","endLine":16,"endColumn":16},{"ruleId":"320","severity":1,"message":"357","line":16,"column":18,"nodeType":"322","messageId":"323","endLine":16,"endColumn":29},{"ruleId":"320","severity":1,"message":"358","line":16,"column":31,"nodeType":"322","messageId":"323","endLine":16,"endColumn":41},{"ruleId":"320","severity":1,"message":"388","line":18,"column":9,"nodeType":"322","messageId":"323","endLine":18,"endColumn":18},{"ruleId":"320","severity":1,"message":"341","line":58,"column":38,"nodeType":"322","messageId":"323","endLine":58,"endColumn":47},{"ruleId":"320","severity":1,"message":"365","line":59,"column":12,"nodeType":"322","messageId":"323","endLine":59,"endColumn":23},{"ruleId":"320","severity":1,"message":"367","line":63,"column":19,"nodeType":"322","messageId":"323","endLine":63,"endColumn":25},{"ruleId":"320","severity":1,"message":"368","line":75,"column":19,"nodeType":"322","messageId":"323","endLine":75,"endColumn":25},{"ruleId":"343","severity":1,"message":"369","line":77,"column":8,"nodeType":"345","endLine":77,"endColumn":17,"suggestions":"389"},{"ruleId":"320","severity":1,"message":"368","line":87,"column":19,"nodeType":"322","messageId":"323","endLine":87,"endColumn":25},{"ruleId":"343","severity":1,"message":"371","line":89,"column":8,"nodeType":"345","endLine":89,"endColumn":21,"suggestions":"390"},{"ruleId":"320","severity":1,"message":"391","line":91,"column":11,"nodeType":"322","messageId":"323","endLine":91,"endColumn":21},{"ruleId":"320","severity":1,"message":"392","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":13},{"ruleId":"320","severity":1,"message":"339","line":4,"column":9,"nodeType":"322","messageId":"323","endLine":4,"endColumn":15},{"ruleId":"320","severity":1,"message":"393","line":11,"column":44,"nodeType":"322","messageId":"323","endLine":11,"endColumn":64},{"ruleId":"320","severity":1,"message":"384","line":15,"column":26,"nodeType":"322","messageId":"323","endLine":15,"endColumn":32},{"ruleId":"320","severity":1,"message":"341","line":75,"column":38,"nodeType":"322","messageId":"323","endLine":75,"endColumn":47},{"ruleId":"320","severity":1,"message":"394","line":86,"column":17,"nodeType":"322","messageId":"323","endLine":86,"endColumn":23},{"ruleId":"320","severity":1,"message":"368","line":98,"column":17,"nodeType":"322","messageId":"323","endLine":98,"endColumn":23},{"ruleId":"343","severity":1,"message":"395","line":102,"column":10,"nodeType":"345","endLine":102,"endColumn":18,"suggestions":"396"},{"ruleId":"343","severity":1,"message":"397","line":104,"column":16,"nodeType":"398","endLine":124,"endColumn":9},{"ruleId":"343","severity":1,"message":"395","line":124,"column":11,"nodeType":"345","endLine":124,"endColumn":44,"suggestions":"399"},{"ruleId":"343","severity":1,"message":"397","line":126,"column":16,"nodeType":"398","endLine":141,"endColumn":6},{"ruleId":"343","severity":1,"message":"400","line":141,"column":8,"nodeType":"345","endLine":141,"endColumn":35,"suggestions":"401"},{"ruleId":"348","severity":1,"message":"402","line":144,"column":59,"nodeType":"350","messageId":"351","endLine":144,"endColumn":61},{"ruleId":"320","severity":1,"message":"339","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":15},{"ruleId":"320","severity":1,"message":"328","line":3,"column":16,"nodeType":"322","messageId":"323","endLine":3,"endColumn":25},{"ruleId":"320","severity":1,"message":"321","line":5,"column":10,"nodeType":"322","messageId":"323","endLine":5,"endColumn":22},{"ruleId":"320","severity":1,"message":"392","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":13},{"ruleId":"320","severity":1,"message":"403","line":7,"column":10,"nodeType":"322","messageId":"323","endLine":7,"endColumn":30},{"ruleId":"320","severity":1,"message":"404","line":7,"column":43,"nodeType":"322","messageId":"323","endLine":7,"endColumn":61},{"ruleId":"320","severity":1,"message":"393","line":7,"column":90,"nodeType":"322","messageId":"323","endLine":7,"endColumn":110},{"ruleId":"320","severity":1,"message":"383","line":10,"column":20,"nodeType":"322","messageId":"323","endLine":10,"endColumn":24},{"ruleId":"320","severity":1,"message":"384","line":10,"column":26,"nodeType":"322","messageId":"323","endLine":10,"endColumn":32},{"ruleId":"320","severity":1,"message":"405","line":20,"column":32,"nodeType":"322","messageId":"323","endLine":20,"endColumn":48},{"ruleId":"320","severity":1,"message":"406","line":34,"column":7,"nodeType":"322","messageId":"323","endLine":34,"endColumn":14},{"ruleId":"320","severity":1,"message":"407","line":40,"column":7,"nodeType":"322","messageId":"323","endLine":40,"endColumn":24},{"ruleId":"320","severity":1,"message":"408","line":64,"column":7,"nodeType":"322","messageId":"323","endLine":64,"endColumn":19},{"ruleId":"320","severity":1,"message":"409","line":85,"column":7,"nodeType":"322","messageId":"323","endLine":85,"endColumn":17},{"ruleId":"320","severity":1,"message":"410","line":97,"column":7,"nodeType":"322","messageId":"323","endLine":97,"endColumn":25},{"ruleId":"320","severity":1,"message":"411","line":146,"column":7,"nodeType":"322","messageId":"323","endLine":146,"endColumn":15},{"ruleId":"320","severity":1,"message":"412","line":158,"column":7,"nodeType":"322","messageId":"323","endLine":158,"endColumn":23},{"ruleId":"320","severity":1,"message":"413","line":176,"column":7,"nodeType":"322","messageId":"323","endLine":176,"endColumn":25},{"ruleId":"320","severity":1,"message":"414","line":183,"column":7,"nodeType":"322","messageId":"323","endLine":183,"endColumn":25},{"ruleId":"320","severity":1,"message":"329","line":2,"column":16,"nodeType":"322","messageId":"323","endLine":2,"endColumn":24},{"ruleId":"320","severity":1,"message":"328","line":2,"column":26,"nodeType":"322","messageId":"323","endLine":2,"endColumn":35},{"ruleId":"320","severity":1,"message":"415","line":6,"column":9,"nodeType":"322","messageId":"323","endLine":6,"endColumn":17},{"ruleId":"320","severity":1,"message":"416","line":6,"column":19,"nodeType":"322","messageId":"323","endLine":6,"endColumn":32},{"ruleId":"320","severity":1,"message":"373","line":7,"column":10,"nodeType":"322","messageId":"323","endLine":7,"endColumn":19},{"ruleId":"320","severity":1,"message":"417","line":9,"column":26,"nodeType":"322","messageId":"323","endLine":9,"endColumn":31},{"ruleId":"320","severity":1,"message":"418","line":98,"column":12,"nodeType":"322","messageId":"323","endLine":98,"endColumn":18},{"ruleId":"320","severity":1,"message":"419","line":98,"column":20,"nodeType":"322","messageId":"323","endLine":98,"endColumn":27},{"ruleId":"320","severity":1,"message":"352","line":98,"column":29,"nodeType":"322","messageId":"323","endLine":98,"endColumn":36},{"ruleId":"320","severity":1,"message":"341","line":98,"column":38,"nodeType":"322","messageId":"323","endLine":98,"endColumn":47},{"ruleId":"320","severity":1,"message":"339","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":15},{"ruleId":"320","severity":1,"message":"415","line":7,"column":9,"nodeType":"322","messageId":"323","endLine":7,"endColumn":17},{"ruleId":"320","severity":1,"message":"417","line":11,"column":26,"nodeType":"322","messageId":"323","endLine":11,"endColumn":31},{"ruleId":"320","severity":1,"message":"341","line":130,"column":38,"nodeType":"322","messageId":"323","endLine":130,"endColumn":47},{"ruleId":"320","severity":1,"message":"420","line":133,"column":12,"nodeType":"322","messageId":"323","endLine":133,"endColumn":23},{"ruleId":"320","severity":1,"message":"421","line":133,"column":25,"nodeType":"322","messageId":"323","endLine":133,"endColumn":39},{"ruleId":"320","severity":1,"message":"422","line":134,"column":12,"nodeType":"322","messageId":"323","endLine":134,"endColumn":18},{"ruleId":"320","severity":1,"message":"423","line":134,"column":20,"nodeType":"322","messageId":"323","endLine":134,"endColumn":29},{"ruleId":"320","severity":1,"message":"424","line":143,"column":17,"nodeType":"322","messageId":"323","endLine":143,"endColumn":27},{"ruleId":"320","severity":1,"message":"368","line":152,"column":17,"nodeType":"322","messageId":"323","endLine":152,"endColumn":23},{"ruleId":"343","severity":1,"message":"371","line":156,"column":10,"nodeType":"345","endLine":156,"endColumn":28,"suggestions":"425"},{"ruleId":"348","severity":1,"message":"349","line":172,"column":16,"nodeType":"350","messageId":"351","endLine":172,"endColumn":18},{"ruleId":"320","severity":1,"message":"347","line":1,"column":8,"nodeType":"322","messageId":"323","endLine":1,"endColumn":13},{"ruleId":"348","severity":1,"message":"349","line":78,"column":20,"nodeType":"350","messageId":"351","endLine":78,"endColumn":22},{"ruleId":"320","severity":1,"message":"328","line":1,"column":26,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"426","line":3,"column":30,"nodeType":"322","messageId":"323","endLine":3,"endColumn":42},{"ruleId":"320","severity":1,"message":"383","line":7,"column":20,"nodeType":"322","messageId":"323","endLine":7,"endColumn":24},{"ruleId":"320","severity":1,"message":"384","line":7,"column":26,"nodeType":"322","messageId":"323","endLine":7,"endColumn":32},{"ruleId":"320","severity":1,"message":"357","line":9,"column":18,"nodeType":"322","messageId":"323","endLine":9,"endColumn":29},{"ruleId":"320","severity":1,"message":"358","line":9,"column":31,"nodeType":"322","messageId":"323","endLine":9,"endColumn":41},{"ruleId":"320","severity":1,"message":"384","line":3,"column":26,"nodeType":"322","messageId":"323","endLine":3,"endColumn":32},{"ruleId":"320","severity":1,"message":"427","line":2,"column":18,"nodeType":"322","messageId":"323","endLine":2,"endColumn":27},{"ruleId":"320","severity":1,"message":"428","line":3,"column":9,"nodeType":"322","messageId":"323","endLine":3,"endColumn":18},{"ruleId":"320","severity":1,"message":"384","line":3,"column":20,"nodeType":"322","messageId":"323","endLine":3,"endColumn":26},{"ruleId":"320","severity":1,"message":"384","line":3,"column":20,"nodeType":"322","messageId":"323","endLine":3,"endColumn":26},{"ruleId":"320","severity":1,"message":"429","line":8,"column":9,"nodeType":"322","messageId":"323","endLine":8,"endColumn":24},{"ruleId":"320","severity":1,"message":"430","line":21,"column":7,"nodeType":"322","messageId":"323","endLine":21,"endColumn":22},{"ruleId":"320","severity":1,"message":"329","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":24},{"ruleId":"320","severity":1,"message":"328","line":1,"column":26,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"384","line":3,"column":20,"nodeType":"322","messageId":"323","endLine":3,"endColumn":26},{"ruleId":"320","severity":1,"message":"383","line":3,"column":28,"nodeType":"322","messageId":"323","endLine":3,"endColumn":32},{"ruleId":"320","severity":1,"message":"355","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":17},{"ruleId":"320","severity":1,"message":"431","line":8,"column":9,"nodeType":"322","messageId":"323","endLine":8,"endColumn":23},{"ruleId":"320","severity":1,"message":"357","line":9,"column":18,"nodeType":"322","messageId":"323","endLine":9,"endColumn":29},{"ruleId":"320","severity":1,"message":"358","line":9,"column":31,"nodeType":"322","messageId":"323","endLine":9,"endColumn":41},{"ruleId":"320","severity":1,"message":"329","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":24},{"ruleId":"320","severity":1,"message":"328","line":1,"column":26,"nodeType":"322","messageId":"323","endLine":1,"endColumn":35},{"ruleId":"320","severity":1,"message":"385","line":3,"column":9,"nodeType":"322","messageId":"323","endLine":3,"endColumn":28},{"ruleId":"320","severity":1,"message":"426","line":3,"column":30,"nodeType":"322","messageId":"323","endLine":3,"endColumn":42},{"ruleId":"320","severity":1,"message":"386","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":26},{"ruleId":"320","severity":1,"message":"387","line":5,"column":28,"nodeType":"322","messageId":"323","endLine":5,"endColumn":47},{"ruleId":"320","severity":1,"message":"432","line":6,"column":22,"nodeType":"322","messageId":"323","endLine":6,"endColumn":29},{"ruleId":"320","severity":1,"message":"384","line":8,"column":26,"nodeType":"322","messageId":"323","endLine":8,"endColumn":32},{"ruleId":"320","severity":1,"message":"433","line":28,"column":7,"nodeType":"322","messageId":"323","endLine":28,"endColumn":27},"no-unused-vars","'useWeb3React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["434"],"no-negated-in-lhs",["435"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.","'GlobalStyle' is defined but never used.","'Link' is defined but never used.","'NavigationBar' is defined but never used.","'Vault' is defined but never used.","'Dropdown' is defined but never used.","'Form' is defined but never used.","'BackgroundImage' is assigned a value but never used.","'NavItem' is defined but never used.","'ethers' is defined but never used.","'getSigner' is defined but never used.","'connector' is assigned a value but never used.","'provider' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.","ArrayExpression",["436"],"'React' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'library' is assigned a value but never used.","'activate' is assigned a value but never used.","'deactivate' is assigned a value but never used.","'userMint' is defined but never used.","'EthIcon' is defined but never used.","'BitcoinIcon' is defined but never used.","'DollarIcon' is defined but never used.","'MyVaultRow' is assigned a value but never used.","'MyVaultCardContainer' is assigned a value but never used.","'PriceTargetRow' is assigned a value but never used.","'CardHeader' is assigned a value but never used.","'HorizontalLine' is assigned a value but never used.","'MintButton' is assigned a value but never used.","'transacting' is assigned a value but never used.","'setTransacting' is assigned a value but never used.","'nftctr' is assigned a value but never used.","'noData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'active' and 'library'. Either include them or remove the dependency array.",["437"],"React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["438"],"'addresses' is defined but never used.","'nftABI' is defined but never used.","'getNFTData' is assigned a value but never used.","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["439","440"],["441","442"],"'Card' is defined but never used.","'Button' is defined but never used.","'StyledDetailsButton' is defined but never used.","'HiChevronDoubleUp' is defined but never used.","'HiChevronDoubleDown' is defined but never used.","'NFTFooter' is defined but never used.",["443"],["444"],"'handleMint' is assigned a value but never used.","'axios' is defined but never used.","'getTokenStakeBalance' is defined but never used.","'master' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account' and 'library'. Either include them or remove the dependency array.",["445"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["446"],"React Hook useEffect has missing dependencies: 'account' and 'masterChefContract'. Either include them or remove the dependency array.",["447"],"Expected '!==' and instead saw '!='.","'StringToFixedDecimal' is defined but never used.","'fetchPoolAllowance' is defined but never used.","'FaRegCheckCircle' is defined but never used.","'Divider' is assigned a value but never used.","'StyledCardContent' is assigned a value but never used.","'StyledButton' is assigned a value but never used.","'StyledLink' is assigned a value but never used.","'StyledExternalLink' is assigned a value but never used.","'FlexFull' is assigned a value but never used.","'PoolFinishedSash' is assigned a value but never used.","'BalanceAndCompound' is assigned a value but never used.","'StyledActionSpacer' is assigned a value but never used.","'ERC20Abi' is defined but never used.","'MasterChefABI' is defined but never used.","'Modal' is defined but never used.","'active' is assigned a value but never used.","'account' is assigned a value but never used.","'userBalance' is assigned a value but never used.","'setUserBalance' is assigned a value but never used.","'poolId' is assigned a value but never used.","'setPoolId' is assigned a value but never used.","'masterChef' is assigned a value but never used.",["448"],"'NFTLineBreak' is defined but never used.","'keyframes' is defined but never used.","'Container' is defined but never used.","'BodyContentCard' is defined but never used.","'ContainerColumn' is assigned a value but never used.","'VaultNFTFooter' is defined but never used.","'FaCoins' is defined but never used.","'DetailsButtonWrapper' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"messageId":"455","fix":"456","desc":"457"},{"messageId":"458","fix":"459","desc":"460"},{"messageId":"455","fix":"461","desc":"457"},{"messageId":"458","fix":"462","desc":"460"},{"desc":"451","fix":"463"},{"desc":"453","fix":"464"},{"desc":"451","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"451","fix":"470"},"Update the dependencies array to be: [activate]",{"range":"471","text":"472"},"Update the dependencies array to be: [account, active, library]",{"range":"473","text":"474"},"Update the dependencies array to be: [active, nftContract]",{"range":"475","text":"476"},"removeEscape",{"range":"477","text":"478"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"479","text":"480"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"481","text":"478"},{"range":"482","text":"480"},{"range":"483","text":"474"},{"range":"484","text":"476"},{"range":"485","text":"474"},"Update the dependencies array to be: [masterChefContract, fastRefresh, library, account]",{"range":"486","text":"487"},"Update the dependencies array to be: [poolData, active, library, account, masterChefContract]",{"range":"488","text":"489"},{"range":"490","text":"474"},[1482,1484],"[activate]",[5021,5030],"[account, active, library]",[5267,5280],"[active, nftContract]",[4124,4125],"",[4124,4124],"\\",[4370,4371],[4370,4370],[2202,2211],[2449,2462],[2711,2719],[3591,3624],"[masterChefContract, fastRefresh, library, account]",[4168,4195],"[poolData, active, library, account, masterChefContract]",[3890,3908]]