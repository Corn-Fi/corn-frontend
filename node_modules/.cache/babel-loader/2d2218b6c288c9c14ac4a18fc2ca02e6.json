{"ast":null,"code":"var _jsxFileName = \"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Page } from \"../../components/Page\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport axios from \"axios\";\nimport { nftABI } from \"../../config/abis\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport { writeContract, userMint } from \"../../utils/nft\";\nimport { EthIcon, BitcoinIcon, DollarIcon } from \"../vaults/components/CreateVault\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyVaultContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 40px;\n`;\n_c = MyVaultContainer;\nconst MyVaultRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 24px;\n`;\n_c2 = MyVaultRow;\nconst MyVaultCard = styled(Card)`\n    padding: 10px;\n    border-radius: 8px;\n    height: auto;\n    width: 100%;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c3 = MyVaultCard;\nconst MyVaultCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    align-items: baseline;\n    align-content: space-around;\n    justify-content: space-around;\n    gap: 8px;\n`;\n_c4 = MyVaultCardContainer;\nconst PriceTargetRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 0px;\n    width: auto;\n    margin: 0px;\n    align-items: flex-start;\n    justify-content: flex-start;\n    gap: 2px;\n`;\n_c5 = PriceTargetRow;\nconst CardHeader = styled.h2`\n    font-size: 220%;\n    font-weight: 600;\n    color: #fbfbfb;\n    text-justify: center;\n    align-self: center;\n`;\n_c6 = CardHeader;\nconst HorizontalLine = styled.hr`\n    display: block;\n    height: 1px;\n    color: #fbfbfb;\n    border: 0;\n    margin: 1em 0;\n    padding: 0;\n`;\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: 20%;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`;\n_c7 = MintButton;\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`;\n_c8 = HeadingContainer;\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c9 = HeadingBackground;\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`;\n_c10 = BigHeading;\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`;\n_c11 = LittleHeading;\n\nconst Vaults = () => {\n  _s();\n\n  const [nftContract, setNftContract] = useState('');\n  const [userNFTData, setUserNFTData] = useState('');\n  const {\n    active,\n    account,\n    library,\n    connector\n  } = useWeb3React();\n  const [transacting, setTransacting] = useState(false);\n  useEffect(() => {\n    if (active) {\n      const nftctr = writeContract(active, library.getSigner(), account, addresses.nft, nftABI).then(value => {\n        setNftContract(value);\n        console.log(value.address);\n      });\n    } else {\n      const noData = setNftContract('');\n    }\n  }, [account]);\n  useEffect(() => {\n    if (active) {\n      axios.get(nftURI).then(response => setUserNFTData(response.data));\n    } else {\n      const noData = setUserNFTData('');\n    }\n  }, [nftContract]);\n\n  const handleMint = async () => {\n    setTransacting(true);\n    userMint(nftContract, account, nftURI);\n    setTransacting(false);\n  };\n\n  const getNFTData = async () => {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/todos/1');\n    return response;\n  };\n\n  console.log(userNFTData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n        children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n          children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n            children: \"Vault Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n            children: \"Keep Track of Your Open Vaults and Strategies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(MintButton, {\n            onClick: async () => handleMint(),\n            children: \"Mint Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MyVaultContainer, {\n        children: /*#__PURE__*/_jsxDEV(MyVaultRow, {\n          children: /*#__PURE__*/_jsxDEV(MyVaultCard, {\n            children: /*#__PURE__*/_jsxDEV(MyVaultCardContainer, {\n              children: [/*#__PURE__*/_jsxDEV(PriceTargetRow, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: \" ETH/USDC \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: /*#__PURE__*/_jsxDEV(EthIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(PriceTargetRow, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: \" Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: \"Open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(PriceTargetRow, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: \" Strat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: \"5% Bracket\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(PriceTargetRow, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"entry price: 4587.48\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"max profit target: 4786.14\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"entry amount: 120.0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Vaults, \"658Seo0hy1qUPjAbVa5IdQNH9N4=\", false, function () {\n  return [useWeb3React];\n});\n\n_c12 = Vaults;\nexport default Vaults;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"MyVaultContainer\");\n$RefreshReg$(_c2, \"MyVaultRow\");\n$RefreshReg$(_c3, \"MyVaultCard\");\n$RefreshReg$(_c4, \"MyVaultCardContainer\");\n$RefreshReg$(_c5, \"PriceTargetRow\");\n$RefreshReg$(_c6, \"CardHeader\");\n$RefreshReg$(_c7, \"MintButton\");\n$RefreshReg$(_c8, \"HeadingContainer\");\n$RefreshReg$(_c9, \"HeadingBackground\");\n$RefreshReg$(_c10, \"BigHeading\");\n$RefreshReg$(_c11, \"LittleHeading\");\n$RefreshReg$(_c12, \"Vaults\");","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/index.js"],"names":["styled","Page","ethers","React","useEffect","useState","useWeb3React","addresses","nftURI","axios","nftABI","Container","Card","Button","writeContract","userMint","EthIcon","BitcoinIcon","DollarIcon","MyVaultContainer","MyVaultRow","MyVaultCard","MyVaultCardContainer","PriceTargetRow","CardHeader","h2","HorizontalLine","hr","MintButton","HeadingContainer","HeadingBackground","BigHeading","h1","LittleHeading","Vaults","nftContract","setNftContract","userNFTData","setUserNFTData","active","account","library","connector","transacting","setTransacting","nftctr","getSigner","nft","then","value","console","log","address","noData","get","response","data","handleMint","getNFTData"],"mappings":"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","sourcesContent":["\nimport styled from \"styled-components\";\nimport {Page} from \"../../components/Page\"\nimport {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport axios from \"axios\"\nimport {nftABI} from \"../../config/abis\";\nimport {Container, Card, Button} from \"react-bootstrap\";\nimport {writeContract, userMint} from \"../../utils/nft\";\n\nimport {EthIcon, BitcoinIcon, DollarIcon} from \"../vaults/components/CreateVault\"\nconst MyVaultContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 40px;\n`\nconst MyVaultRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 24px;\n`\n\nconst MyVaultCard = styled(Card)`\n    padding: 10px;\n    border-radius: 8px;\n    height: auto;\n    width: 100%;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nconst MyVaultCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    align-items: baseline;\n    align-content: space-around;\n    justify-content: space-around;\n    gap: 8px;\n`\nconst PriceTargetRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 0px;\n    width: auto;\n    margin: 0px;\n    align-items: flex-start;\n    justify-content: flex-start;\n    gap: 2px;\n`\n\nconst CardHeader = styled.h2`\n    font-size: 220%;\n    font-weight: 600;\n    color: #fbfbfb;\n    text-justify: center;\n    align-self: center;\n`\nconst HorizontalLine = styled.hr`\n    display: block;\n    height: 1px;\n    color: #fbfbfb;\n    border: 0;\n    margin: 1em 0;\n    padding: 0;\n`\n\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: 20%;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`\n\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`\n\nconst Vaults = () => {\n    const [nftContract, setNftContract] = useState('');\n    const [userNFTData, setUserNFTData] = useState('');\n    const {active, account, library, connector} = useWeb3React();\n    const [transacting, setTransacting] = useState(false);\n\n    useEffect( () => {\n        if (active) {\n            const nftctr = writeContract(\n                active,\n                library.getSigner(),\n                account,\n                addresses.nft,\n                nftABI,\n            )\n            .then( value => {\n                setNftContract(value)\n                console.log(value.address)\n            })\n        } else {\n            const noData = setNftContract('')\n        }\n    }, [account])\n\n    useEffect( () => {\n        if (active) {\n            axios.get(nftURI)\n            .then(response => setUserNFTData(response.data))\n            \n        } else {\n            const noData = setUserNFTData('')\n        }\n    }, [nftContract])\n\n    const handleMint = async () => {\n        setTransacting(true)\n        userMint(nftContract, account, nftURI)\n        setTransacting(false)\n    }\n    \n    const getNFTData = async () => {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/todos/1')\n        return response\n    }\n\n \n    console.log(userNFTData)\n    return (\n        <>\n        <Page>\n\n            <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Vault Dashboard</BigHeading>\n                    <LittleHeading>Keep Track of Your Open Vaults and Strategies</LittleHeading>\n                    <MintButton onClick={async () => handleMint()}>Mint Now</MintButton>\n                </HeadingBackground>\n            </HeadingContainer>\n\n            <MyVaultContainer>\n                <MyVaultRow>\n\n                    <MyVaultCard>\n                        <MyVaultCardContainer>\n                        <PriceTargetRow>\n                            <CardHeader> ETH/USDC </CardHeader>\n                            <CardHeader><EthIcon /></CardHeader>\n                        </PriceTargetRow>\n\n                        <PriceTargetRow>\n                            <CardHeader> Status</CardHeader>\n                            <CardHeader>Open</CardHeader>\n                        </PriceTargetRow>\n                        <PriceTargetRow>\n                            <CardHeader> Strat</CardHeader>\n                            <CardHeader>5% Bracket</CardHeader>\n                        </PriceTargetRow>\n\n                        <PriceTargetRow>\n                            <p>entry price: 4587.48</p>\n                            <p>max profit target: 4786.14</p>\n                            <p>entry amount: 120.0</p>\n                        </PriceTargetRow>\n                        \n                        </MyVaultCardContainer>\n                    </MyVaultCard>\n                    \n                </MyVaultRow>\n            </MyVaultContainer>\n\n        </Page>\n\n        </>\n    )\n}\n\nexport default Vaults\n"]},"metadata":{},"sourceType":"module"}