{"ast":null,"code":"import { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../config/addresses\";\nimport { nftABI } from \"../config/abis\";\nimport { nftURI } from \"../config/uri\";\nimport axios from \"axios\"; //get signer\n//connect signer to contract\n\nexport const writeContract = async (active, _provider, _account, _address, _abi) => {\n  if (active) {\n    try {\n      const ctr = new ethers.Contract(_address, _abi, _provider);\n\n      if (ctr.address) {\n        return ctr;\n      } else {\n        console.log(\"Contract failed to load, refresh signer\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n};\nexport const userMint = async (_nftContract, recipient, _tokenURI) => {\n  const ctr = _nftContract;\n\n  try {\n    const mint = await ctr.mintNFT(recipient, _tokenURI);\n    return mint;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst getNFTData = async () => {\n  const data = axios.get(nftURI).then(value => {\n    return value;\n  });\n};","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/nft.js"],"names":["ethers","React","useEffect","useState","useWeb3React","addresses","nftABI","nftURI","axios","writeContract","active","_provider","_account","_address","_abi","ctr","Contract","address","console","log","err","userMint","_nftContract","recipient","_tokenURI","mint","mintNFT","getNFTData","data","get","then","value"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,QAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AAGA;;AAGA,OAAO,MAAMC,aAAa,GAAG,OAAOC,MAAP,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,EAA8CC,IAA9C,KAAuD;AAChF,MAAIJ,MAAJ,EAAY;AACR,QAAI;AACA,YAAMK,GAAG,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBH,QAApB,EAA8BC,IAA9B,EAAoCH,SAApC,CAAZ;;AACA,UAAII,GAAG,CAACE,OAAR,EAAiB;AACb,eAAOF,GAAP;AACH,OAFD,MAEO;AACHG,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACH;AACJ,KAPD,CAOE,OAAOC,GAAP,EAAY;AAACF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAAiB;AACnC;AACJ,CAXM;AAeP,OAAO,MAAMC,QAAQ,GAAG,OAAOC,YAAP,EAAqBC,SAArB,EAAgCC,SAAhC,KAA8C;AAClE,QAAMT,GAAG,GAAGO,YAAZ;;AACA,MAAI;AACA,UAAMG,IAAI,GAAG,MAAMV,GAAG,CAACW,OAAJ,CAAYH,SAAZ,EAAuBC,SAAvB,CAAnB;AACA,WAAOC,IAAP;AACH,GAHD,CAGE,OAAOL,GAAP,EAAY;AAACF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAAiB;AACnC,CANM;;AASP,MAAMO,UAAU,GAAG,YAAY;AAC3B,QAAMC,IAAI,GAAGpB,KAAK,CAACqB,GAAN,CAAUtB,MAAV,EACZuB,IADY,CACPC,KAAK,IAAI;AACX,WAAOA,KAAP;AACH,GAHY,CAAb;AAIH,CALD","sourcesContent":["import {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../config/addresses\";\nimport {nftABI} from \"../config/abis\";\nimport {nftURI} from \"../config/uri\";\nimport axios from \"axios\"\n\n//get signer\n\n\n//connect signer to contract\n\n\nexport const writeContract = async (active, _provider, _account, _address, _abi) => {\n    if (active) {\n        try {\n            const ctr = new ethers.Contract(_address, _abi, _provider)\n            if (ctr.address) {\n                return ctr\n            } else {\n                console.log(\"Contract failed to load, refresh signer\")\n            }\n        } catch (err) {console.log(err)}\n    }\n}\n\n\n\nexport const userMint = async (_nftContract, recipient, _tokenURI) => {\n    const ctr = _nftContract;\n    try {\n        const mint = await ctr.mintNFT(recipient, _tokenURI)\n        return mint\n    } catch (err) {console.log(err)}\n}\n\n\nconst getNFTData = async () => {\n    const data = axios.get(nftURI)\n    .then(value => {\n        return value\n    })\n}"]},"metadata":{},"sourceType":"module"}