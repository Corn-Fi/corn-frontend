{"ast":null,"code":"var _jsxFileName = \"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Page } from \"../../components/Page\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport axios from \"axios\";\nimport { nftABI } from \"../../config/abis\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport { writeContract, userMint } from \"../../utils/nft\";\nimport { StyledDetailsButton } from \"../../pages/pools/components/PoolCard\";\nimport { HiChevronDoubleUp, HiChevronDoubleDown } from \"react-icons/hi\";\nimport { EthIcon, BitcoinIcon, DollarIcon } from \"../vaults/components/CreateVault\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyNFTContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 40px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n`;\n_c = MyNFTContainer;\nconst MyNFTGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`;\n_c2 = MyNFTGrid;\nconst MyNFTCard = styled(Card)`\n    border-radius: 8px;\n    height: auto;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c3 = MyNFTCard;\nconst MyNFTCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    align-items: flex-start;\n    align-content: flex-start;\n    justify-content: space-around;\n    gap: 8px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n      }\n`;\n_c4 = MyNFTCardContainer;\nconst NFTImageWrapper = styled.img`\n    border-radius: 5px;\n`;\n_c5 = NFTImageWrapper;\nconst NFTBrandName = styled.p`\n    font-size: 70%;\n    color: #fbdb37;\n`;\n_c6 = NFTBrandName;\nconst NFTTitle = styled.h3`\n    font-size: 120%;\n    font-weight: 600;\n    color: #fbfbfb;\n`;\n_c7 = NFTTitle;\nconst NFTLineBreak = styled.hr`\n      color: #393C3F;\n      width: 100%;\n`;\n_c8 = NFTLineBreak;\nconst PriceRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    padding: 0px;\n    width: 100%;\n    margin: 0px;\n    align-content: space-between;\n    justify-content: space-between;\n    gap: 12px;\n`;\n_c9 = PriceRow;\nconst ButtonWrapper = styled.div`\n      display: flex;\n      flex-direction: row;\n      width: 40%;\n      height: auto;\n`;\n_c10 = ButtonWrapper;\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`;\n_c11 = MintButton;\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`;\n_c12 = HeadingContainer;\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c13 = HeadingBackground;\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`;\n_c14 = BigHeading;\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`;\n_c15 = LittleHeading;\n\nconst NFT = () => {\n  _s();\n\n  const [nftContract, setNftContract] = useState('');\n  const [userNFTData, setUserNFTData] = useState('');\n  const {\n    active,\n    account,\n    library,\n    connector\n  } = useWeb3React();\n  const [transacting, setTransacting] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    if (active) {\n      const nftctr = writeContract(active, library.getSigner(), account, addresses.nft, nftABI).then(value => {\n        setNftContract(value);\n        console.log(value.address);\n      });\n    } else {\n      const noData = setNftContract('');\n    }\n  }, [account]);\n  useEffect(() => {\n    if (active) {\n      axios.get(nftURI).then(response => setUserNFTData(response.data));\n    } else {\n      const noData = setUserNFTData('');\n    }\n  }, [nftContract]);\n\n  const handleMint = async () => {\n    setTransacting(true);\n    userMint(nftContract, account, nftURI);\n    setTransacting(false);\n  };\n\n  const fakeUserNFTs = [\"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\"];\n  console.log(userNFTData);\n\n  const handleDetailsOnClick = () => {\n    setIsOpen(prev => !prev);\n  };\n\n  if (fakeUserNFTs !== null && userNFTData !== null) {\n    console.log(fakeUserNFTs);\n    const mapFakeUserNFTs = fakeUserNFTs.map((nft, index) => /*#__PURE__*/_jsxDEV(MyNFTCard, {\n      children: /*#__PURE__*/_jsxDEV(MyNFTCardContainer, {\n        children: [/*#__PURE__*/_jsxDEV(NFTImageWrapper, {\n          src: userNFTData.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NFTBrandName, {\n          children: \"CornFinance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NFTTitle, {\n          children: userNFTData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NFTLineBreak, {\n          size: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PriceRow, {\n          children: [/*#__PURE__*/_jsxDEV(NFTBrandName, {\n            children: \"Asking Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(NFTTitle, {\n            children: [/*#__PURE__*/_jsxDEV(EthIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 31\n            }, this), \"100.00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(StyledDetailsButton, {\n          onClick: handleDetailsOnClick,\n          children: [\"Details\", isOpen.index ? /*#__PURE__*/_jsxDEV(HiChevronDoubleUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(HiChevronDoubleDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(NFTLineBreak, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n            children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n              children: \"Strategy Marketplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n              children: \"Acquire new strategies by minting an NFT to suit your trading style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n              children: /*#__PURE__*/_jsxDEV(MintButton, {\n                onClick: async () => handleMint(),\n                children: \"Mint Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyNFTGrid, {\n          children: mapFakeUserNFTs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n            children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n              children: \"Strategy Marketplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n              children: \"Acquire new strategies by minting an NFT to suit your trading style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n              children: /*#__PURE__*/_jsxDEV(MintButton, {\n                onClick: async () => handleMint(),\n                children: \"Mint Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyNFTContainer, {\n          children: \"No NFTs :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(NFT, \"+EbLz/XduT/09hOepK/CNPfAukQ=\", false, function () {\n  return [useWeb3React];\n});\n\n_c16 = NFT;\nexport default NFT;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n\n$RefreshReg$(_c, \"MyNFTContainer\");\n$RefreshReg$(_c2, \"MyNFTGrid\");\n$RefreshReg$(_c3, \"MyNFTCard\");\n$RefreshReg$(_c4, \"MyNFTCardContainer\");\n$RefreshReg$(_c5, \"NFTImageWrapper\");\n$RefreshReg$(_c6, \"NFTBrandName\");\n$RefreshReg$(_c7, \"NFTTitle\");\n$RefreshReg$(_c8, \"NFTLineBreak\");\n$RefreshReg$(_c9, \"PriceRow\");\n$RefreshReg$(_c10, \"ButtonWrapper\");\n$RefreshReg$(_c11, \"MintButton\");\n$RefreshReg$(_c12, \"HeadingContainer\");\n$RefreshReg$(_c13, \"HeadingBackground\");\n$RefreshReg$(_c14, \"BigHeading\");\n$RefreshReg$(_c15, \"LittleHeading\");\n$RefreshReg$(_c16, \"NFT\");","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/index.js"],"names":["styled","Page","ethers","React","useEffect","useState","useWeb3React","addresses","nftURI","axios","nftABI","Container","Card","Button","writeContract","userMint","StyledDetailsButton","HiChevronDoubleUp","HiChevronDoubleDown","EthIcon","BitcoinIcon","DollarIcon","MyNFTContainer","MyNFTGrid","MyNFTCard","MyNFTCardContainer","NFTImageWrapper","img","NFTBrandName","p","NFTTitle","h3","NFTLineBreak","hr","PriceRow","ButtonWrapper","div","MintButton","HeadingContainer","HeadingBackground","BigHeading","h1","LittleHeading","h2","NFT","nftContract","setNftContract","userNFTData","setUserNFTData","active","account","library","connector","transacting","setTransacting","isOpen","setIsOpen","nftctr","getSigner","nft","then","value","console","log","address","noData","get","response","data","handleMint","fakeUserNFTs","handleDetailsOnClick","prev","mapFakeUserNFTs","map","index","image","description"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAAQC,IAAR,QAAmB,uBAAnB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAsC,iBAAtC;AACA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,iBAAtC;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SAAQC,iBAAR,EAA2BC,mBAA3B,QAAqD,gBAArD;AAEA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,UAA9B,QAA+C,kCAA/C;;;AACA,MAAMC,cAAc,GAAGtB,MAAM,CAACW,SAAD,CAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMW,c;AAUN,MAAMC,SAAS,GAAGvB,MAAM,CAACW,SAAD,CAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;MAAMY,S;AAoBN,MAAMC,SAAS,GAAGxB,MAAM,CAACY,IAAD,CAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMY,S;AAON,MAAMC,kBAAkB,GAAGzB,MAAM,CAACW,SAAD,CAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMc,kB;AAaN,MAAMC,eAAe,GAAG1B,MAAM,CAAC2B,GAAI;AACnC;AACA,CAFA;MAAMD,e;AAGN,MAAME,YAAY,GAAG5B,MAAM,CAAC6B,CAAE;AAC9B;AACA;AACA,CAHA;MAAMD,Y;AAIN,MAAME,QAAQ,GAAG9B,MAAM,CAAC+B,EAAG;AAC3B;AACA;AACA;AACA,CAJA;MAAMD,Q;AAKN,MAAME,YAAY,GAAGhC,MAAM,CAACiC,EAAG;AAC/B;AACA;AACA,CAHA;MAAMD,Y;AAIN,MAAME,QAAQ,GAAGlC,MAAM,CAACW,SAAD,CAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMuB,Q;AAWN,MAAMC,aAAa,GAAGnC,MAAM,CAACoC,GAAI;AACjC;AACA;AACA;AACA;AACA,CALA;OAAMD,a;AAON,MAAME,UAAU,GAAGrC,MAAM,CAACa,MAAD,CAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BA;OAAMwB,U;AA+BN,MAAMC,gBAAgB,GAAGtC,MAAM,CAACW,SAAD,CAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,CANA;OAAM2B,gB;AAQN,MAAMC,iBAAiB,GAAGvC,MAAM,CAACY,IAAD,CAAO;AACvC;AACA;AACA;AACA;AACA;AACA,CANA;OAAM2B,iB;AAQN,MAAMC,UAAU,GAAGxC,MAAM,CAACyC,EAAG;AAC7B;AACA;AACA;AACA;AACA,CALA;OAAMD,U;AAMN,MAAME,aAAa,GAAG1C,MAAM,CAAC2C,EAAG;AAChC;AACA;AACA;AACA;AACA,CALA;OAAMD,a;;AAON,MAAME,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0C,WAAD,EAAcC,cAAd,IAAgC3C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAC4C,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAAwC9C,YAAY,EAA1D;AACA,QAAM,CAAC+C,WAAD,EAAcC,cAAd,IAAgCjD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkD,MAAD,EAASC,SAAT,IAAsBnD,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACb,QAAI6C,MAAJ,EAAY;AACR,YAAMQ,MAAM,GAAG3C,aAAa,CACxBmC,MADwB,EAExBE,OAAO,CAACO,SAAR,EAFwB,EAGxBR,OAHwB,EAIxB3C,SAAS,CAACoD,GAJc,EAKxBjD,MALwB,CAAb,CAOdkD,IAPc,CAORC,KAAK,IAAI;AACZf,QAAAA,cAAc,CAACe,KAAD,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,OAVc,CAAf;AAWH,KAZD,MAYO;AACH,YAAMC,MAAM,GAAGnB,cAAc,CAAC,EAAD,CAA7B;AACH;AACJ,GAhBQ,EAgBN,CAACI,OAAD,CAhBM,CAAT;AAmBA9C,EAAAA,SAAS,CAAE,MAAM;AACb,QAAI6C,MAAJ,EAAY;AAERxC,MAAAA,KAAK,CAACyD,GAAN,CAAU1D,MAAV,EACCoD,IADD,CACMO,QAAQ,IAAInB,cAAc,CAACmB,QAAQ,CAACC,IAAV,CADhC;AAGH,KALD,MAKO;AACH,YAAMH,MAAM,GAAGjB,cAAc,CAAC,EAAD,CAA7B;AACH;AACJ,GATQ,EASN,CAACH,WAAD,CATM,CAAT;;AAWA,QAAMwB,UAAU,GAAG,YAAY;AAC3Bf,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAvC,IAAAA,QAAQ,CAAC8B,WAAD,EAAcK,OAAd,EAAuB1C,MAAvB,CAAR;AACA8C,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAJD;;AAOA,QAAMgB,YAAY,GAAG,CACjB,sCADiB,EAEjB,sCAFiB,EAGjB,sCAHiB,EAIjB,sCAJiB,CAArB;AAOAR,EAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;;AAEA,QAAMwB,oBAAoB,GAAG,MAAM;AAC/Bf,IAAAA,SAAS,CAACgB,IAAI,IAAE,CAACA,IAAR,CAAT;AACH,GAFD;;AAIA,MAAIF,YAAY,KAAK,IAAjB,IAAyBvB,WAAW,KAAK,IAA7C,EAAmD;AAC/Ce,IAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACA,UAAMG,eAAe,GAAIH,YAAY,CAACI,GAAb,CAAiB,CAACf,GAAD,EAAMgB,KAAN,kBACtC,QAAC,SAAD;AAAA,6BACI,QAAC,kBAAD;AAAA,gCACA,QAAC,eAAD;AAAiB,UAAA,GAAG,EAAE5B,WAAW,CAAC6B;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,QAAD;AAAA,oBAAW7B,WAAW,CAAC8B;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA,QAAC,QAAD;AAAA,kCACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,QAAD;AAAA,oCAAU,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAWA,QAAC,mBAAD;AAAqB,UAAA,OAAO,EAAEN,oBAA9B;AAAA,gCACYhB,MAAM,CAACoB,KAAP,gBAAe,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,kBAAf,gBAAsC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,kBADlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXA,EAeEpB,MAAM,iBACJ,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADqB,CAAzB;AAyBA,wBACA;AAAA,6BACA,QAAC,IAAD;AAAA,gCAEI,QAAC,gBAAD;AAAA,iCACI,QAAC,iBAAD;AAAA,oCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,aAAD;AAAA,qCAAe,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAE,YAAYc,UAAU,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUI,QAAC,SAAD;AAAA,oBAEKI;AAFL;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADA;AAsBH,GAjDD,MAiDO;AACH,wBACI;AAAA,6BACA,QAAC,IAAD;AAAA,gCAEI,QAAC,gBAAD;AAAA,iCACI,QAAC,iBAAD;AAAA,oCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,aAAD;AAAA,qCAAe,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAE,YAAYJ,UAAU,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAsBH;AACJ,CAlID;;GAAMzB,G;UAG4CtC,Y;;;OAH5CsC,G;AAmIN,eAAeA,GAAf","sourcesContent":["\nimport styled from \"styled-components\";\nimport {Page} from \"../../components/Page\"\nimport {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport axios from \"axios\"\nimport {nftABI} from \"../../config/abis\";\nimport {Container, Card, Button} from \"react-bootstrap\";\nimport {writeContract, userMint} from \"../../utils/nft\";\nimport { StyledDetailsButton } from \"../../pages/pools/components/PoolCard\"\nimport {HiChevronDoubleUp, HiChevronDoubleDown} from \"react-icons/hi\"\n\nimport {EthIcon, BitcoinIcon, DollarIcon} from \"../vaults/components/CreateVault\"\nconst MyNFTContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 40px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n`\n\nconst MyNFTGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`\n\n\nconst MyNFTCard = styled(Card)`\n    border-radius: 8px;\n    height: auto;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nconst MyNFTCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 12px;\n    align-items: flex-start;\n    align-content: flex-start;\n    justify-content: space-around;\n    gap: 8px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n      }\n`\nconst NFTImageWrapper = styled.img`\n    border-radius: 5px;\n`\nconst NFTBrandName = styled.p`\n    font-size: 70%;\n    color: #fbdb37;\n`\nconst NFTTitle = styled.h3`\n    font-size: 120%;\n    font-weight: 600;\n    color: #fbfbfb;\n`\nconst NFTLineBreak = styled.hr`\n      color: #393C3F;\n      width: 100%;\n`\nconst PriceRow = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    padding: 0px;\n    width: 100%;\n    margin: 0px;\n    align-content: space-between;\n    justify-content: space-between;\n    gap: 12px;\n`\n\nconst ButtonWrapper = styled.div`\n      display: flex;\n      flex-direction: row;\n      width: 40%;\n      height: auto;\n`\n\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`\n\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`\n\nconst NFT = () => {\n    const [nftContract, setNftContract] = useState('');\n    const [userNFTData, setUserNFTData] = useState('');\n    const {active, account, library, connector} = useWeb3React();\n    const [transacting, setTransacting] = useState(false);\n    const [isOpen, setIsOpen] = useState(false)\n\n    useEffect( () => {\n        if (active) {\n            const nftctr = writeContract(\n                active,\n                library.getSigner(),\n                account,\n                addresses.nft,\n                nftABI,\n            )\n            .then( value => {\n                setNftContract(value)\n                console.log(value.address)\n            })\n        } else {\n            const noData = setNftContract('')\n        }\n    }, [account])\n\n\n    useEffect( () => {\n        if (active) {\n    \n            axios.get(nftURI)\n            .then(response => setUserNFTData(response.data))\n            \n        } else {\n            const noData = setUserNFTData('')\n        }\n    }, [nftContract])\n\n    const handleMint = async () => {\n        setTransacting(true)\n        userMint(nftContract, account, nftURI)\n        setTransacting(false)\n    }\n    \n\n    const fakeUserNFTs = [ \n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n    ]\n \n    console.log(userNFTData)\n\n    const handleDetailsOnClick = () => {\n        setIsOpen(prev=>!prev)\n    }\n\n    if (fakeUserNFTs !== null && userNFTData !== null) {\n        console.log(fakeUserNFTs)\n        const mapFakeUserNFTs =  fakeUserNFTs.map((nft, index) => (\n            <MyNFTCard>\n                <MyNFTCardContainer>\n                <NFTImageWrapper src={userNFTData.image}></NFTImageWrapper>\n                <NFTBrandName>CornFinance</NFTBrandName>\n                <NFTTitle>{userNFTData.description}</NFTTitle>\n                <NFTLineBreak size=\"8\"/>\n                <PriceRow>\n                    <NFTBrandName>Asking Price</NFTBrandName>\n                    <NFTTitle><EthIcon />100.00</NFTTitle>\n                </PriceRow>\n                \n      \n                <StyledDetailsButton onClick={handleDetailsOnClick}>\n                    Details{isOpen.index ? <HiChevronDoubleUp/> : <HiChevronDoubleDown/>}\n                </StyledDetailsButton>\n\n                { isOpen && \n                    <NFTLineBreak />\n                }\n\n                </MyNFTCardContainer>\n            </MyNFTCard>\n        ));\n\n        return (\n        <>\n        <Page>\n\n            <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Strategy Marketplace</BigHeading>\n                    <LittleHeading>Acquire new strategies by minting an NFT to suit your trading style</LittleHeading>\n                    <ButtonWrapper><MintButton onClick={async () => handleMint()}>Mint Now</MintButton></ButtonWrapper>\n                </HeadingBackground>\n            </HeadingContainer>\n\n            <MyNFTGrid>\n\n                {mapFakeUserNFTs}\n           \n            </MyNFTGrid>\n\n        </Page>\n\n        </>\n        )\n    } else {\n        return (\n            <>\n            <Page>\n    \n                <HeadingContainer>\n                    <HeadingBackground>\n                        <BigHeading>Strategy Marketplace</BigHeading>\n                        <LittleHeading>Acquire new strategies by minting an NFT to suit your trading style</LittleHeading>\n                        <ButtonWrapper><MintButton onClick={async () => handleMint()}>Mint Now</MintButton></ButtonWrapper>\n                    </HeadingBackground>\n                </HeadingContainer>\n    \n                <MyNFTContainer>\n    \n                    No NFTs :(\n               \n                </MyNFTContainer>\n    \n            </Page>\n    \n            </>\n            )\n    }\n}\nexport default NFT"]},"metadata":{},"sourceType":"module"}