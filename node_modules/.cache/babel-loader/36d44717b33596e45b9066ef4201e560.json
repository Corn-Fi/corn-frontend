{"ast":null,"code":"var _jsxFileName = \"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Page } from \"../../components/Page\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport axios from \"axios\";\nimport { nftABI } from \"../../config/abis\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport { writeContract, userMint } from \"../../utils/nft\";\nimport { StyledDetailsButton } from \"../../pages/pools/components/PoolCard\";\nimport { HiChevronDoubleUp, HiChevronDoubleDown } from \"react-icons/hi\";\nimport { EthIcon, BitcoinIcon, DollarIcon } from \"../vaults/components/CreateVault\";\nimport { NFTFooter } from \"./components/NFTFooter\";\nimport { NFTCard } from \"./components/NFTCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyNFTContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 40px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n`;\n_c = MyNFTContainer;\nconst MyNFTGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`;\n_c2 = MyNFTGrid;\nexport const MyNFTCard = styled(Card)`\n    border-radius: 8px;\n    height: auto;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c3 = MyNFTCard;\nconst ButtonWrapper = styled.div`\n      display: flex;\n      flex-direction: row;\n      width: 40%;\n      height: auto;\n`;\n_c4 = ButtonWrapper;\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`;\n_c5 = MintButton;\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`;\n_c6 = HeadingContainer;\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c7 = HeadingBackground;\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`;\n_c8 = BigHeading;\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`;\n_c9 = LittleHeading;\n\nconst NFT = () => {\n  _s();\n\n  const [nftContract, setNftContract] = useState('');\n  const [userNFTData, setUserNFTData] = useState('');\n  const {\n    active,\n    account,\n    library,\n    connector\n  } = useWeb3React();\n  const [transacting, setTransacting] = useState(false);\n  useEffect(() => {\n    if (active) {\n      const nftctr = writeContract(active, library.getSigner(), account, addresses.nft, nftABI).then(value => {\n        setNftContract(value);\n        console.log(value.address);\n      });\n    } else {\n      const noData = setNftContract('');\n    }\n  }, [account]);\n  useEffect(() => {\n    if (active) {\n      axios.get(nftURI).then(response => setUserNFTData(response.data));\n    } else {\n      const noData = setUserNFTData('');\n    }\n  }, [nftContract]);\n\n  const handleMint = async () => {\n    setTransacting(true);\n    userMint(nftContract, account, nftURI);\n    setTransacting(false);\n  };\n\n  const fakeUserNFTs = [\"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\"];\n\n  if (fakeUserNFTs !== null && userNFTData !== null) {\n    console.log(fakeUserNFTs);\n    const mapFakeUserNFTs = fakeUserNFTs.map((nft, index) => /*#__PURE__*/_jsxDEV(MyNFTCard, {\n      id: index,\n      image: userNFTData.image,\n      title: userNFTData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n            children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n              children: \"Strategy Marketplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n              children: \"Acquire new strategies by minting an NFT to suit your trading style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n              children: /*#__PURE__*/_jsxDEV(MintButton, {\n                onClick: async () => handleMint(),\n                children: \"Mint Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyNFTGrid, {\n          children: mapFakeUserNFTs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n            children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n              children: \"Strategy Marketplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n              children: \"Acquire new strategies by minting an NFT to suit your trading style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n              children: /*#__PURE__*/_jsxDEV(MintButton, {\n                onClick: async () => handleMint(),\n                children: \"Mint Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyNFTContainer, {\n          children: \"No NFTs :(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(NFT, \"658Seo0hy1qUPjAbVa5IdQNH9N4=\", false, function () {\n  return [useWeb3React];\n});\n\n_c10 = NFT;\nexport default NFT;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"MyNFTContainer\");\n$RefreshReg$(_c2, \"MyNFTGrid\");\n$RefreshReg$(_c3, \"MyNFTCard\");\n$RefreshReg$(_c4, \"ButtonWrapper\");\n$RefreshReg$(_c5, \"MintButton\");\n$RefreshReg$(_c6, \"HeadingContainer\");\n$RefreshReg$(_c7, \"HeadingBackground\");\n$RefreshReg$(_c8, \"BigHeading\");\n$RefreshReg$(_c9, \"LittleHeading\");\n$RefreshReg$(_c10, \"NFT\");","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/nftgallery/index.js"],"names":["styled","Page","ethers","React","useEffect","useState","useWeb3React","addresses","nftURI","axios","nftABI","Container","Card","Button","writeContract","userMint","StyledDetailsButton","HiChevronDoubleUp","HiChevronDoubleDown","EthIcon","BitcoinIcon","DollarIcon","NFTFooter","NFTCard","MyNFTContainer","MyNFTGrid","MyNFTCard","ButtonWrapper","div","MintButton","HeadingContainer","HeadingBackground","BigHeading","h1","LittleHeading","h2","NFT","nftContract","setNftContract","userNFTData","setUserNFTData","active","account","library","connector","transacting","setTransacting","nftctr","getSigner","nft","then","value","console","log","address","noData","get","response","data","handleMint","fakeUserNFTs","mapFakeUserNFTs","map","index","image","description"],"mappings":"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","sourcesContent":["\nimport styled from \"styled-components\";\nimport {Page} from \"../../components/Page\"\nimport {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport axios from \"axios\"\nimport {nftABI} from \"../../config/abis\";\nimport {Container, Card, Button} from \"react-bootstrap\";\nimport {writeContract, userMint} from \"../../utils/nft\";\nimport { StyledDetailsButton } from \"../../pages/pools/components/PoolCard\"\nimport {HiChevronDoubleUp, HiChevronDoubleDown} from \"react-icons/hi\"\n\nimport {EthIcon, BitcoinIcon, DollarIcon} from \"../vaults/components/CreateVault\"\n\nimport {NFTFooter} from \"./components/NFTFooter\";\nimport {NFTCard} from \"./components/NFTCard\";\n\nconst MyNFTContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 40px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n`\n\nconst MyNFTGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`\n\nexport const MyNFTCard = styled(Card)`\n    border-radius: 8px;\n    height: auto;\n    width: auto;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\n\nconst ButtonWrapper = styled.div`\n      display: flex;\n      flex-direction: row;\n      width: 40%;\n      height: auto;\n`\n\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`\n\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`\n\nconst NFT = () => {\n    const [nftContract, setNftContract] = useState('');\n    const [userNFTData, setUserNFTData] = useState('');\n    const {active, account, library, connector} = useWeb3React();\n    const [transacting, setTransacting] = useState(false);\n\n    useEffect( () => {\n        if (active) {\n            const nftctr = writeContract(\n                active,\n                library.getSigner(),\n                account,\n                addresses.nft,\n                nftABI,\n            )\n            .then( value => {\n                setNftContract(value)\n                console.log(value.address)\n            })\n        } else {\n            const noData = setNftContract('')\n        }\n    }, [account])\n\n\n    useEffect( () => {\n        if (active) {\n    \n            axios.get(nftURI)\n            .then(response => setUserNFTData(response.data))\n            \n        } else {\n            const noData = setUserNFTData('')\n        }\n    }, [nftContract])\n\n    const handleMint = async () => {\n        setTransacting(true)\n        userMint(nftContract, account, nftURI)\n        setTransacting(false)\n    }\n    \n\n    const fakeUserNFTs = [ \n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n    ]\n \n\n\n\n    if (fakeUserNFTs !== null && userNFTData !== null) {\n        console.log(fakeUserNFTs)\n\n        const mapFakeUserNFTs = fakeUserNFTs.map((nft, index) => (\n\n            <MyNFTCard\n                id={index}\n                image={userNFTData.image}\n                title={userNFTData.description}\n            />\n \n        ));\n\n        return (\n        <>\n        <Page>\n\n            <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Strategy Marketplace</BigHeading>\n                    <LittleHeading>Acquire new strategies by minting an NFT to suit your trading style</LittleHeading>\n                    <ButtonWrapper><MintButton onClick={async () => handleMint()}>Mint Now</MintButton></ButtonWrapper>\n                </HeadingBackground>\n            </HeadingContainer>\n\n            <MyNFTGrid>\n\n                {mapFakeUserNFTs}\n           \n            </MyNFTGrid>\n\n        </Page>\n\n        </>\n        )\n    } else {\n        return (\n            <>\n            <Page>\n    \n                <HeadingContainer>\n                    <HeadingBackground>\n                        <BigHeading>Strategy Marketplace</BigHeading>\n                        <LittleHeading>Acquire new strategies by minting an NFT to suit your trading style</LittleHeading>\n                        <ButtonWrapper><MintButton onClick={async () => handleMint()}>Mint Now</MintButton></ButtonWrapper>\n                    </HeadingBackground>\n                </HeadingContainer>\n    \n                <MyNFTContainer>\n    \n                    No NFTs :(\n               \n                </MyNFTContainer>\n    \n            </Page>\n    \n            </>\n            )\n    }\n}\nexport default NFT"]},"metadata":{},"sourceType":"module"}