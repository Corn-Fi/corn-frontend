{"ast":null,"code":"var _jsxFileName = \"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/ConnectButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { Button } from \"react-bootstrap\"; //web3 shit\n\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { ethers, getSigner } from \"ethers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 137]\n});\nconst TheButton = styled(Button)`\n \n\n    border-radius: 15px;\n    height: 50px;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n    \n`;\n_c = TheButton;\nexport const ConnectButton = () => {\n  _s();\n\n  const {\n    active,\n    account,\n    library,\n    connector,\n    provider,\n    activate,\n    deactivate\n  } = useWeb3React();\n  useEffect(() => {\n    const eagerConnect = async connector => {\n      try {\n        activate(injected);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    eagerConnect(injected);\n  }, []);\n\n  const handleConnect = async connector => {\n    try {\n      await activate(connector);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDisconnect = async () => {\n    try {\n      deactivate(injected);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !active ? /*#__PURE__*/_jsxDEV(TheButton, {\n      onClick: () => handleConnect(injected),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TheButton, {\n      library: library,\n      onClick: () => handleDisconnect(),\n      children: shortie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ConnectButton, \"P1UKB+AmL+0jsmv5YJNi0fzgXVU=\", false, function () {\n  return [useWeb3React];\n});\n\n_c2 = ConnectButton;\nexport default ConnectButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TheButton\");\n$RefreshReg$(_c2, \"ConnectButton\");","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/components/ConnectButton.js"],"names":["React","useEffect","useState","styled","Button","InjectedConnector","ethers","getSigner","useWeb3React","injected","supportedChainIds","TheButton","ConnectButton","active","account","library","connector","provider","activate","deactivate","eagerConnect","err","console","log","handleConnect","handleDisconnect","shortie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,MAAR,QAAqB,iBAArB,C,CAEA;;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,QAAlC;AACA,SAAQC,YAAR,QAA2B,kBAA3B;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,IAAIJ,iBAAJ,CAAsB;AAC1CK,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,GAAJ;AADuB,CAAtB,CAAjB;AAKP,MAAMC,SAAS,GAAGR,MAAM,CAACC,MAAD,CAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhCA;KAAMO,S;AAkCN,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA,QAAjD;AAA2DC,IAAAA;AAA3D,MAA0EX,YAAY,EAA5F;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,YAAY,GAAG,MAAOJ,SAAP,IAAqB;AACtC,UAAI;AACAE,QAAAA,QAAQ,CAACT,QAAD,CAAR;AACH,OAFD,CAEE,OAAOY,GAAP,EAAY;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;AACnC,KAJD;;AAKAD,IAAAA,YAAY,CAACX,QAAD,CAAZ;AAEH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMe,aAAa,GAAG,MAAOR,SAAP,IAAqB;AACvC,QAAI;AACA,YAAME,QAAQ,CAACF,SAAD,CAAd;AACH,KAFD,CAEE,OAAOK,GAAP,EAAY;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;AACnC,GAJD;;AAMA,QAAMI,gBAAgB,GAAG,YAAY;AACjC,QAAI;AACAN,MAAAA,UAAU,CAACV,QAAD,CAAV;AACH,KAFD,CAEE,OAAOY,GAAP,EAAY;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;AACnC,GAJD;;AAKA,sBACI;AAAA,cAGE,CAACR,MAAD,gBACF,QAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAMW,aAAa,CAACf,QAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEM,OAApB;AAA6B,MAAA,OAAO,EAAE,MAAMU,gBAAgB,EAA5D;AAAA,gBAAkEC;AAAlE;AAAA;AAAA;AAAA;AAAA;AANA,mBADJ;AAYH,CApCM;;GAAMd,a;UACuEJ,Y;;;MADvEI,a;AAsCb,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport styled from \"styled-components\"\nimport {Button} from \"react-bootstrap\";\n\n//web3 shit\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\nimport { ethers, getSigner } from \"ethers\";\nimport {useWeb3React} from \"@web3-react/core\";\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: [1, 137],\n})\n\n\nconst TheButton = styled(Button)`\n \n\n    border-radius: 15px;\n    height: 50px;\n    width: auto;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n    \n`\n\nexport const ConnectButton = () => {\n    const { active, account, library, connector, provider, activate, deactivate } = useWeb3React();\n\n    useEffect(() => {\n        const eagerConnect = async (connector) => {\n            try {\n                activate(injected);\n            } catch (err) {console.log(err)}\n        }\n        eagerConnect(injected);\n        \n    }, [])\n\n    const handleConnect = async (connector) => {\n        try {\n            await activate(connector);\n        } catch (err) {console.log(err)}\n    }\n\n    const handleDisconnect = async () => {\n        try {\n            deactivate(injected);\n        } catch (err) {console.log(err)}\n    }\n    return (\n        <>\n        \n\n        { !active ? \n        <TheButton onClick={() => handleConnect(injected)} >Connect</TheButton>\n        :\n        <TheButton library={library} onClick={() => handleDisconnect()} >{shortie}</TheButton>\n\n        }\n        </>\n    )\n}\n\nexport default ConnectButton\n"]},"metadata":{},"sourceType":"module"}