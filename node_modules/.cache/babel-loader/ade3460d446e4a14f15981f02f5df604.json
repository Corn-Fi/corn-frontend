{"ast":null,"code":"var _jsxFileName = \"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Page } from \"../../components/Page\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport axios from \"axios\";\nimport { nftABI } from \"../../config/abis\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport { writeContract, userMint } from \"../../utils/nft\";\nimport { NFTCard } from \"../../pages/nftgallery/components/NFTCard\";\nimport { Chart } from \"./components/Chart\";\nimport { Vault } from \"../../pages/vaults/components/CreateVault\";\nimport { EthIcon, BitcoinIcon, DollarIcon } from \"../vaults/components/CreateVault\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SoManyContainers = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 55px;\n\n`;\n_c = SoManyContainers;\nconst MyVaultContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 40px;\n`;\n_c2 = MyVaultContainer;\nconst MyVaultRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 24px;\n`;\nconst VaultGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: 100%;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`;\n_c3 = VaultGrid;\nconst MyVaultCard = styled(Card)`\n    padding: 10px;\n    border-radius: 8px;\n    position: relative;\n    z-index: 0;\n    height: auto;\n    width: 100%;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    width: 100%;\n\n`;\n_c4 = MyVaultCard;\nconst CardGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: 100%;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`;\n_c5 = CardGrid;\nconst MyVaultCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    align-content: space-around;\n    justify-content: space-around;\n    gap: 8px;\n    width: 100%;\n\n`;\nconst PriceTargetRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 0px;\n    width: auto;\n    margin: 0px;\n    align-items: center;\n    justify-content: center;\n    gap: 2px;\n`;\nconst CardHeader = styled.h2`\n    font-size: 220%;\n    font-weight: 600;\n    color: #fbfbfb;\n    text-justify: center;\n    align-self: center;\n`;\nconst HorizontalLine = styled.hr`\n    width: 100%;\n    color: #fbfbfb;\n`;\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: 20%;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`;\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`;\n_c6 = HeadingContainer;\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c7 = HeadingBackground;\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`;\n_c8 = BigHeading;\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`;\n_c9 = LittleHeading;\n\nconst Vaults = () => {\n  _s();\n\n  const [nftContract, setNftContract] = useState('');\n  const [userNFTData, setUserNFTData] = useState('');\n  const [transacting, setTransacting] = useState(false);\n  const {\n    active,\n    account,\n    library,\n    connector\n  } = useWeb3React();\n  useEffect(() => {\n    if (active) {\n      const nftctr = writeContract(active, library.getSigner(), account, addresses.nft, nftABI).then(value => {\n        setNftContract(value);\n        console.log(value.address);\n      });\n    } else {\n      const noData = setNftContract('');\n    }\n  }, [account]);\n  useEffect(() => {\n    if (active) {\n      axios.get(nftURI).then(response => setUserNFTData(response.data));\n    } else {\n      const noData = setUserNFTData('');\n    }\n  }, [nftContract]);\n  const fakeUserNFTs = [\"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\", \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\"]; //this would be live data\n\n  if (fakeUserNFTs !== null && userNFTData !== null) {\n    const mapFakeNFTs = fakeUserNFTs.map((nft, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(MyVaultContainer, {\n        children: /*#__PURE__*/_jsxDEV(MyVaultCard, {\n          children: /*#__PURE__*/_jsxDEV(CardGrid, {\n            children: [/*#__PURE__*/_jsxDEV(NFTCard, {\n              mintData: {\n                nftContract,\n                account,\n                nftURI\n              },\n              id: index,\n              image: userNFTData.image,\n              title: userNFTData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }, this)\n    }, void 0, false));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n            children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n              children: \"Vault Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n              children: \"Keep Track of Your Open Vaults and Strategies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SoManyContainers, {\n          children: mapFakeNFTs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n          children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n            children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n              children: \"Vault Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n              children: \"Keep Track of Your Open Vaults and Strategies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MyVaultContainer, {\n          children: /*#__PURE__*/_jsxDEV(VaultGrid, {\n            children: /*#__PURE__*/_jsxDEV(MyVaultCard, {\n              children: /*#__PURE__*/_jsxDEV(CardGrid, {\n                children: [/*#__PURE__*/_jsxDEV(NFTCard, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(Vaults, \"WPER/IjyfAbEFfflVVlyhObIIvI=\", false, function () {\n  return [useWeb3React];\n});\n\n_c10 = Vaults;\nexport default Vaults;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"SoManyContainers\");\n$RefreshReg$(_c2, \"MyVaultContainer\");\n$RefreshReg$(_c3, \"VaultGrid\");\n$RefreshReg$(_c4, \"MyVaultCard\");\n$RefreshReg$(_c5, \"CardGrid\");\n$RefreshReg$(_c6, \"HeadingContainer\");\n$RefreshReg$(_c7, \"HeadingBackground\");\n$RefreshReg$(_c8, \"BigHeading\");\n$RefreshReg$(_c9, \"LittleHeading\");\n$RefreshReg$(_c10, \"Vaults\");","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/myvaults/index.js"],"names":["styled","Page","ethers","React","useEffect","useState","useWeb3React","addresses","nftURI","axios","nftABI","Container","Card","Button","writeContract","userMint","NFTCard","Chart","Vault","EthIcon","BitcoinIcon","DollarIcon","SoManyContainers","MyVaultContainer","MyVaultRow","VaultGrid","MyVaultCard","CardGrid","MyVaultCardContainer","PriceTargetRow","CardHeader","h2","HorizontalLine","hr","MintButton","HeadingContainer","HeadingBackground","BigHeading","h1","LittleHeading","Vaults","nftContract","setNftContract","userNFTData","setUserNFTData","transacting","setTransacting","active","account","library","connector","nftctr","getSigner","nft","then","value","console","log","address","noData","get","response","data","fakeUserNFTs","mapFakeNFTs","map","index","image","description"],"mappings":"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","sourcesContent":["\nimport styled from \"styled-components\";\nimport {Page} from \"../../components/Page\"\nimport {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\n\nimport axios from \"axios\"\nimport {nftABI} from \"../../config/abis\";\nimport {Container, Card, Button} from \"react-bootstrap\";\nimport {writeContract, userMint} from \"../../utils/nft\";\nimport {NFTCard} from \"../../pages/nftgallery/components/NFTCard\";\nimport {Chart} from \"./components/Chart\"\nimport {Vault} from \"../../pages/vaults/components/CreateVault\"\n\nimport {EthIcon, BitcoinIcon, DollarIcon} from \"../vaults/components/CreateVault\"\n\nconst SoManyContainers = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 55px;\n\n`\n\nconst MyVaultContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 40px;\n`\nconst MyVaultRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 24px;\n`\nconst VaultGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: 100%;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`\n\nconst MyVaultCard = styled(Card)`\n    padding: 10px;\n    border-radius: 8px;\n    position: relative;\n    z-index: 0;\n    height: auto;\n    width: 100%;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n    width: 100%;\n\n`\nconst CardGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: 100%;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`\nconst MyVaultCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    align-content: space-around;\n    justify-content: space-around;\n    gap: 8px;\n    width: 100%;\n\n`\nconst PriceTargetRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    padding: 0px;\n    width: auto;\n    margin: 0px;\n    align-items: center;\n    justify-content: center;\n    gap: 2px;\n`\n\nconst CardHeader = styled.h2`\n    font-size: 220%;\n    font-weight: 600;\n    color: #fbfbfb;\n    text-justify: center;\n    align-self: center;\n`\nconst HorizontalLine = styled.hr`\n    width: 100%;\n    color: #fbfbfb;\n`\n\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: 20%;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`\n\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`\n\n\nconst Vaults = () => {\n    const [nftContract, setNftContract] = useState('');\n    const [userNFTData, setUserNFTData] = useState('');\n    const [transacting, setTransacting] = useState(false);\n   \n    const {active, account, library, connector} = useWeb3React();\n\n    useEffect( () => {\n        if (active) {\n            const nftctr = writeContract(\n                active,\n                library.getSigner(),\n                account,\n                addresses.nft,\n                nftABI,\n            )\n            .then( value => {\n                setNftContract(value)\n                console.log(value.address)\n            })\n        } else {\n            const noData = setNftContract('')\n        }\n    }, [account])\n\n    useEffect( () => {\n        if (active) {\n    \n            axios.get(nftURI)\n            .then(response => setUserNFTData(response.data))\n            \n        } else {\n            const noData = setUserNFTData('')\n        }\n    }, [nftContract])\n\n    const fakeUserNFTs = [ \n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n        \"0xisdhfwouhfihfihsdkfjhaskdjfhasjkdf\",\n    ] //this would be live data\n\n    if (fakeUserNFTs !== null && userNFTData !== null) {\n\n        const mapFakeNFTs = fakeUserNFTs.map( (nft, index) => (\n\n                        <>\n                        <MyVaultContainer>\n                            <MyVaultCard>\n                                <CardGrid>\n                                    <NFTCard\n                                        mintData = {{nftContract, account, nftURI}}\n                                        id={index}\n                                        image={userNFTData.image}\n                                        title={userNFTData.description}\n                                    />\n\n                                    <Chart/>\n                                </CardGrid>\n                            </MyVaultCard>\n                        </MyVaultContainer>\n                        </>\n                    \n\n        \n            \n        ))\n\n        return (\n            <>\n            <Page>\n    \n                <HeadingContainer>\n                    <HeadingBackground>\n                        <BigHeading>Vault Dashboard</BigHeading>\n                        <LittleHeading>Keep Track of Your Open Vaults and Strategies</LittleHeading>\n                    </HeadingBackground>\n                </HeadingContainer>\n\n                <SoManyContainers>\n                \n\n                            {mapFakeNFTs}\n                        \n                </SoManyContainers>\n            </Page>\n    \n            </>\n        )\n\n    } else {\n\n        return (\n            <>\n            <Page>\n    \n                <HeadingContainer>\n                    <HeadingBackground>\n                        <BigHeading>Vault Dashboard</BigHeading>\n                        <LittleHeading>Keep Track of Your Open Vaults and Strategies</LittleHeading>\n                    </HeadingBackground>\n                </HeadingContainer>\n    \n                <MyVaultContainer>\n                    <VaultGrid>\n                        <MyVaultCard>\n                            <CardGrid>\n    \n                                <NFTCard/>\n    \n                                <Chart/>\n                            \n                            </CardGrid>\n                        </MyVaultCard>\n                \n                    </VaultGrid>\n                </MyVaultContainer>\n                \n            </Page>\n    \n            </>\n        )\n    }\n\n    \n}\n\nexport default Vaults\n"]},"metadata":{},"sourceType":"module"}