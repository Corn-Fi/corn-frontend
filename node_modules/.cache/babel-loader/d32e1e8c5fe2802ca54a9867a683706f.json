{"ast":null,"code":"var _jsxFileName = \"/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\"; //static confg\n\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport { pools } from \"../../config/pools\";\nimport { nftABI, MasterChefABI } from \"../../config/abis\";\nimport { writeContract, userMint } from \"../../utils/nft\";\nimport { getUserFarmData, getPoolLength, mapPendingToOriginalData } from \"../../utils/fetchUserData\"; //Components\n\nimport { Page } from \"../../components/Page\";\nimport { Container, Card, Button } from \"react-bootstrap\";\nimport PoolCard from \"./components/PoolCard\";\nimport { EthIcon, BitcoinIcon, DollarIcon } from \"../vaults/components/CreateVault\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyVaultContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 40px;\n`;\nconst MyVaultRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 24px;\n`;\nconst MyVaultCard = styled(Card)`\n    padding: 10px;\n    border-radius: 8px;\n    position: relative;\n    z-index: 0;\n    height: auto;\n    width: 100%;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\nconst MyVaultCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    align-items: baseline;\n    align-content: space-around;\n    justify-content: space-around;\n    gap: 8px;\n`;\nconst PoolGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`;\n_c = PoolGrid;\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: 20%;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`;\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`;\n_c2 = HeadingContainer;\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`;\n_c3 = HeadingBackground;\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`;\n_c4 = BigHeading;\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`;\n_c5 = LittleHeading;\n\nconst Pools = () => {\n  _s();\n\n  const {\n    active,\n    account,\n    library,\n    connector\n  } = useWeb3React();\n  const [poolData, setPoolData] = useState(null); //imported above\n\n  const [masterChefContract, setMasterChefContract] = useState(null);\n  useEffect(() => {\n    if (active) {\n      const masterChef = writeContract(active, library.getSigner(), account, addresses.masterChef, MasterChefABI).then(value => setMasterChefContract(value));\n    } else {\n      const noData = setMasterChefContract(null);\n    }\n  }, [account, library]);\n  useEffect(() => {\n    if (active) {\n      //const plength = getPoolLength(masterChefContract);\n      //console.log(plength)\n      const farmData = getUserFarmData(library.getSigner(), masterChefContract, 4, poolData).then(values => {\n        const userFarmData = mapPendingToOriginalData(values, pools, masterChefContract, 4).then(val => setPoolData(val));\n      });\n    } else {\n      setPoolData(pools);\n    }\n  }, [masterChefContract, library, account]); //if we do have pooldata then go ahead and populate a card for each pool\n\n  if (poolData !== null) {\n    console.log(`This is PoolData u look for ${poolData}`);\n    const mapPoolData = poolData.map((pool, index) => /*#__PURE__*/_jsxDEV(PoolCard, {\n      poolData: pool\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n        children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n          children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n            children: \"Staking Pools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n            children: \"Stake Assets to Earn COB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PoolGrid, {\n        children: mapPoolData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } //if we dont have pool data then return static dummy\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(HeadingContainer, {\n        children: /*#__PURE__*/_jsxDEV(HeadingBackground, {\n          children: [/*#__PURE__*/_jsxDEV(BigHeading, {\n            children: \"Staking Pools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LittleHeading, {\n            children: \"Stake Assets to Earn COB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PoolGrid, {\n        children: [/*#__PURE__*/_jsxDEV(PoolCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PoolCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PoolCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pools, \"Mv94tTpRe5vEqWa5i44kcyfQPxk=\", false, function () {\n  return [useWeb3React];\n});\n\n_c6 = Pools;\nexport default Pools;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PoolGrid\");\n$RefreshReg$(_c2, \"HeadingContainer\");\n$RefreshReg$(_c3, \"HeadingBackground\");\n$RefreshReg$(_c4, \"BigHeading\");\n$RefreshReg$(_c5, \"LittleHeading\");\n$RefreshReg$(_c6, \"Pools\");","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/pages/pools/index.js"],"names":["styled","axios","ethers","React","useEffect","useState","useWeb3React","addresses","nftURI","pools","nftABI","MasterChefABI","writeContract","userMint","getUserFarmData","getPoolLength","mapPendingToOriginalData","Page","Container","Card","Button","PoolCard","EthIcon","BitcoinIcon","DollarIcon","MyVaultContainer","MyVaultRow","MyVaultCard","MyVaultCardContainer","PoolGrid","MintButton","HeadingContainer","HeadingBackground","BigHeading","h1","LittleHeading","h2","Pools","active","account","library","connector","poolData","setPoolData","masterChefContract","setMasterChefContract","masterChef","getSigner","then","value","noData","farmData","values","userFarmData","val","console","log","mapPoolData","map","pool","index"],"mappings":"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","sourcesContent":["\nimport styled from \"styled-components\";\nimport axios from \"axios\"\nimport {ethers} from \"ethers\";\nimport React, {useEffect, useState} from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n//static confg\nimport { addresses } from \"../../config/addresses\";\nimport { nftURI } from \"../../config/uri\";\nimport {pools} from \"../../config/pools\";\nimport {nftABI, MasterChefABI} from \"../../config/abis\";\nimport {writeContract, userMint} from \"../../utils/nft\";\nimport {getUserFarmData, getPoolLength, mapPendingToOriginalData} from \"../../utils/fetchUserData\";\n//Components\nimport {Page} from \"../../components/Page\"\nimport {Container, Card, Button} from \"react-bootstrap\";\n\nimport PoolCard from \"./components/PoolCard\"\nimport {EthIcon, BitcoinIcon, DollarIcon} from \"../vaults/components/CreateVault\"\n\nconst MyVaultContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n    margin-top: 40px;\n`\nconst MyVaultRow = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 24px;\n`\n\nconst MyVaultCard = styled(Card)`\n    padding: 10px;\n    border-radius: 8px;\n    position: relative;\n    z-index: 0;\n    height: auto;\n    width: 100%;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\nconst MyVaultCardContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    align-items: baseline;\n    align-content: space-around;\n    justify-content: space-around;\n    gap: 8px;\n`\nconst PoolGrid = styled(Container)`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    justify-items: center;\n    align-content: start;\n    column-gap: 2px;\n    row-gap: 20px;\n    margin-bottom: 25px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        grid-template-columns: auto;\n        grid-template-rows: auto;\n      }\n  \n`\n\nconst MintButton = styled(Button)`\n    border-radius: 15px;\n    height: 50px;\n    width: 20%;\n    background: #fbdb37;\n    border-color: #fce984;\n    border-width: 3px;\n    color: #FFFFE0;\n    font-size: 20px;\n    font-weight: 600;\n    margin-top: 20px;\n\n\n    &:hover {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n\n    &:focus {\n        background: #fbdb37;\n        border-color: #dfbb05;\n        border-width: 3px;\n        color: #dfbb05;\n        font-size: 20px;\n        font-weight: 800;\n    }\n`\nconst HeadingContainer = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    margin-top: 15px;\n`\n\nconst HeadingBackground = styled(Card)`\n    height: auto;\n    width: 100%;\n    padding: 20px;\n    background-color: #1D1E20;\n    box-shadow: 0px 3px 15px rgba(0,0,0,0.2);\n`\n\nconst BigHeading = styled.h1`\n    font-size: 280%;\n    font-weight: 800;\n    color:  #fbdb37;\n    \n`\nconst LittleHeading = styled.h2`\n    font-size: 200%;\n    font-weight: 600;\n    color: #fbfbfb;\n    \n`\n\n\nconst Pools = () => {\n   \n    const {active, account, library, connector} = useWeb3React();\n    const [poolData, setPoolData] = useState(null); //imported above\n    const [masterChefContract, setMasterChefContract] = useState(null)\n    \n    useEffect( () => {\n        if (active) {\n          const masterChef = writeContract(\n              active, \n              library.getSigner(), \n              account,\n              addresses.masterChef,\n              MasterChefABI,\n              )\n          .then( value => setMasterChefContract(value))\n        } else {\n          const noData = setMasterChefContract(null)\n        }\n        \n        \n      }, [account, library])\n\n    useEffect(() => {\n        if (active) {\n            //const plength = getPoolLength(masterChefContract);\n            //console.log(plength)\n            const farmData = getUserFarmData(library.getSigner(), masterChefContract, 4, poolData)\n            .then(values => {\n                const userFarmData = mapPendingToOriginalData(values, pools, masterChefContract, 4)\n                .then(val => setPoolData(val))\n            });\n            \n        } else {\n            setPoolData(pools)\n        }\n    \n    }, [masterChefContract, library, account])\n\n    //if we do have pooldata then go ahead and populate a card for each pool\n    if (poolData !== null) {\n        console.log(`This is PoolData u look for ${poolData}`)\n        const mapPoolData =  poolData.map((pool, index) => (\n            \n            <PoolCard key={index} poolData={pool}/>\n            \n        ));\n\n        return (\n            <>\n            <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Staking Pools</BigHeading>\n                    <LittleHeading>Stake Assets to Earn COB</LittleHeading>\n                </HeadingBackground>\n            </HeadingContainer>\n            <PoolGrid>\n                {mapPoolData}\n            </PoolGrid>\n            \n            \n    \n            </>\n        )\n    }\n   \n    //if we dont have pool data then return static dummy\n    return (\n        <>\n        <Page>\n\n            <HeadingContainer>\n                <HeadingBackground>\n                    <BigHeading>Staking Pools</BigHeading>\n                    <LittleHeading>Stake Assets to Earn COB</LittleHeading>\n                </HeadingBackground>\n            </HeadingContainer>\n\n            <PoolGrid>\n\n                <PoolCard/>\n                <PoolCard/>\n                <PoolCard/>\n                \n            \n            </PoolGrid>\n            \n\n        </Page>\n\n        </>\n    )\n}\n\nexport default Pools"]},"metadata":{},"sourceType":"module"}