{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { ethers } from \"ethers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 137]\n});\nexport const TruncateAddress = () => {\n  _s();\n\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate\n  } = useWeb3React();\n  let shortAddress = \"\";\n\n  if (active) {\n    shortAddress = account.substring(0, 7);\n  } else {\n    shortAddress = \"Connect\";\n  }\n\n  return shortAddress;\n};\n\n_s(TruncateAddress, \"3xXgvxT7IjmJicz07oB2rdzZCWg=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = TruncateAddress;\nexport default TruncateAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"TruncateAddress\");","map":{"version":3,"sources":["/Users/nolanterry/Desktop/CORNLIMITFRONTEND/cornfrontend/src/utils/TruncateAddress.js"],"names":["ethers","useWeb3React","InjectedConnector","injected","supportedChainIds","TruncateAddress","active","account","library","connector","activate","deactivate","shortAddress","substring"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;AAEA,OAAO,MAAMC,QAAQ,GAAG,IAAID,iBAAJ,CAAsB;AAC1CE,EAAAA,iBAAiB,EAAE,CAAC,CAAD,EAAI,GAAJ;AADuB,CAAtB,CAAjB;AAIP,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA;AAAjD,MAAgEV,YAAY,EAAlF;AAEA,MAAIW,YAAY,GAAG,EAAnB;;AACA,MAAIN,MAAJ,EAAY;AACRM,IAAAA,YAAY,GAAGL,OAAO,CAACM,SAAR,CAAkB,CAAlB,EAAoB,CAApB,CAAf;AACH,GAFD,MAEO;AACHD,IAAAA,YAAY,GAAG,SAAf;AACH;;AACD,SAAOA,YAAP;AACH,CAVM;;GAAMP,e;UAC6DJ,Y;;;KAD7DI,e;AAYb,eAAeA,eAAf","sourcesContent":["import { ethers } from \"ethers\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {InjectedConnector} from \"@web3-react/injected-connector\";\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: [1, 137],\n})\n\nexport const TruncateAddress = () => {\n    const { active, account, library, connector, activate, deactivate } = useWeb3React();\n\n    let shortAddress = \"\"\n    if (active) {\n        shortAddress = account.substring(0,7);\n    } else {\n        shortAddress = \"Connect\"\n    }\n    return shortAddress    \n}\n\nexport default TruncateAddress"]},"metadata":{},"sourceType":"module"}